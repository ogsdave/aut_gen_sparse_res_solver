<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2018" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1080" rtablesize="10" useclientjvm="true" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group hide-input="false" labelreference="L14" drawlabel="true" applyint="true" applyrational="true" applyexponent="false"><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart:

solverFolderName :=solvers/problem_relpose_6p_focal:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sizeofcombs := [2]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">heurisitictemplatesize := 200:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">noofdatacoeff :=27:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">varorder := []:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">theoreticalsolncnt:=15:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">polycomb := [1,11]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read cat(solverFolderName, &quot;/Eqs.txt&quot;): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;construct_sparse_coeff_mat.txt&quot;:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;polysolver.map&quot;:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;ComputeSparsePolyBasis.txt&quot;: </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">march('open', &quot;convex.mla&quot;):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read &quot;IntegerPoints.txt&quot;:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(convex):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqs := convert(eqs, list):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">selectedhiddenvarind := -1:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if hiddenVarNumber = -1 then</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	fr := 1:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	en := numelems(vars):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">else</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	fr := hiddenVarNumber:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	en := hiddenVarNumber:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end if:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for hiddenvarind from fr to en do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    hiddenVarNumber := hiddenvarind:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    hiddenVar := parse(cat(&quot;a&quot;, hiddenVarNumber)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    unHiddenVars := select(v -&gt; v &lt;&gt; hiddenVar, vars):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">    printf(&quot;Trying out by hidding variable  %s \134n.&quot;, cat(&quot;a&quot;, hiddenVarNumber));</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    newHiddenVarNumber := max(map(v-&gt;parse(substring(v,2..)),vars))+1:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    acthiddenvarnumber := newHiddenVarNumber:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    vars := [cat('a',hiddenVarNumber), op(unHiddenVars),cat('a',newHiddenVarNumber)]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    eqs := [op(eqs), vars[1] - vars[-1] ]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    unHiddenVars := vars[..-2]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    hiddenVarNumber := newHiddenVarNumber:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    hiddenVar := parse(cat(&quot;a&quot;, hiddenVarNumber)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    print(unHiddenVars, vars, hiddenVarNumber, eqs[-1]);</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    CUDA[Enable](true):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">    printf(&quot;CUDA enabled : %s \134n&quot;,CUDA[IsEnabled]());</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    if numelems(polycomb) = 0 then polycomb := []: end if:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        randrange := -1000000..1000000:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        randomize():</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        Bn := min():</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        sparsebasis := []:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        # Iterate through all possible permutations of the variables in question. </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    for varperm in [combinat[permute]([a1,a2,a3,a4,a5,a6])[1]] do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            # Convert polynomial equations to matrix form	</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            M, originalbasis, tempts := monpolymult(eqs, [op(unHiddenVars), hiddenVar], varperm):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            numoftempts := numelems(tempts):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            Msymbolic := M:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            # Reduce the matrix to a reduced row echelon form</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        Mreduced, reducedeqs, nc := reducepoly(M, originalbasis, noofrowstoreduce, noofdatacoeff, randrange, tempts):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	numofncs := numelems(nc):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	# Random instance for the reduced equations</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        for i to noofdatacoeff do  </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		assign(cat('c', i), (i+ithprime(100))/(i-ithprime(10000))):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	for i to numoftempts do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		assign(cat('t', i), tempts[i]): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	if noofrowstoreduce &gt; 0 then</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		Mpatch:=LinearAlgebra[ReducedRowEchelonForm](convert(Msymbolic[1..noofrowstoreduce,..],Matrix)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		M := ArrayTools[Concatenate](1, Mpatch, evalm(convert(Msymbolic[noofrowstoreduce+1..,..], Matrix)) );</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	else</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		M := Msymbolic:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        end:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	linearMnew := ArrayTools[Reshape](M, numelems(eqs)*numelems(originalbasis), 1):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	for i to numofncs do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		assign(cat('nc', i), linearMnew[nc[i],1]): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	# We randomize the hidden variable as well</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        assign(cat('a',hiddenVarNumber), RandomTools[Generate](rational)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        # We find sparse basis for the reduced equations. Here the coefficients are 'nc's.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        try:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            Boriginal, Toriginal, B, T := findsparseresultnat(reducedeqs, unHiddenVars, sizeofcombs, polycomb, theoreticalsolncnt, heurisitictemplatesize):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            Tn := convert(map(at -&gt; Size(T[at])[1], [seq(1 .. numelems(T))]), `+`):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            Cr := polytomat(T, B, eval(reducedeqs), unHiddenVars, numelems(B), Tn):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            print(T, Tn, numelems(B));	</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        	#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        	# We select the newly found basis only if it is smaller than the one previously selected.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            #======================================================================================		</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        	if numelems(B) &gt; 0 and numelems(B) &lt; Bn then </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        		sparsebasis := B:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        		Bn := numelems(B):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        		monmultiples := T:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        		selectedhiddenvarind := hiddenvarind:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">        		printf(&quot;Sparse basis size =  %d \134n&quot;, numelems(sparsebasis));</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">        		printf(&quot; No. of rows = %d \134n&quot;, convert(map(at -&gt; ArrayTools[Size](monmultiples[at])[1], [seq(1..numelems(eqs))]), `+`));</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            end if:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        catch:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">            print(&quot;error&quot;):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        end try:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        #======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        # Unassign everything. As the basis has been found and we do not need sample instance of reduced equations.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        #======================================================================================		</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        unassign(cat('a',hiddenVarNumber)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">        for i to numofncs do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		unassign(cat('nc',i)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	for i to numoftempts do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		unassign(cat('t',i)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:	</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	for i to noofdatacoeff do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    		unassign(cat('c',i)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">    end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do:</Text-field>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60simplex%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `simplex` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60oldpredeigsz%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `oldpredeigsz` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60temp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `temp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60bbs%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `bbs` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60gbs%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `gbs` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Boriginal%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Boriginal` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60B1%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `B1` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60T1%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `T1` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60T2%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `T2` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60B2%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `B2` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60rowindicestotest%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `rowindicestotest` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60cstried%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `cstried` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60inds%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `inds` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Ctemp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Ctemp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Btemp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Btemp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Ttemp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Ttemp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60rowindices%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `rowindices` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60colindices%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `colindices` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60c%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `c` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60rows2rem%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `rows2rem` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60rows2kp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `rows2kp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Ctempb%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Ctempb` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60zdcols%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `zdcols` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60colstokp%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `colstokp` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60cols2rem%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `cols2rem` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Ck%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Ck` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60difff%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `difff` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60noofnonzelems%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `noofnonzelems` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60indicestoskip%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `indicestoskip` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60p1%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `p1` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60tempTT%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `tempTT` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60rankofgdblck%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `rankofgdblck` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60Cr%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60findsparseresultnat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `Cr` is implicitly declared local to procedure `findsparseresultnat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20%60mons1%60%20is%20implicitly%20declared%20local%20to%20procedure%20%60polytomat%60" hyperlink="true"><Font style="HyperlinkWarning">Warning, `mons1` is implicitly declared local to procedure `polytomat`</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2JVEobGlibmFtZUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtc0dGJDYjUUBDOlxQcm9ncmFtfkZpbGVzXE1hcGxlfjIwMThcbGliRictRjY2LVEoJmNvbW1hO0YnRjlGOy9GP0YxRkBGQkZERkZGSC9GS1EmMC4wZW1GJy9GTlEsMC4zMzMzMzMzZW1GJy1GUDYjUStjb252ZXgubWxhRidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShsaWJuYW1lR0YoNiRRQEM6XFByb2dyYW1+RmlsZXNcTWFwbGV+MjAxOFxsaWJGKFErY29udmV4Lm1sYUYoNyRGL0Yw</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">Convex version 1.2.0, Copyright (C) 1999-2016 Matthias Franz
This package is distributed under the GNU General Public License
See http://www.math.uwo.ca/~mfranz/convex/ for more information
Trying out by hidding variable  a2 
.</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobWZlbmNlZEdGJDYmLUYjNiotSSNtaUdGJDYlUSNhMkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RIixGJy9GOFEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRjYvJSlzdHJldGNoeUdGQi8lKnN5bW1ldHJpY0dGQi8lKGxhcmdlb3BHRkIvJS5tb3ZhYmxlbGltaXRzR0ZCLyUnYWNjZW50R0ZCLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRictRjE2JVEjYTFGJ0Y0RjdGOi1GMTYlUSNhM0YnRjRGNy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGQkY+Rj4vJSVvcGVuR1EnJmxzcWI7RicvJSZjbG9zZUdRJyZyc3FiO0YnLUY7Ni1RKCZjb21tYTtGJ0Y+RkBGQ0ZFRkdGSUZLRk1GT0ZSLUYsNiYtRiM2LEYwRjpGVUY6RlhGOi1GMTYlUSNhNEYnRjRGN0ZlbkZobkY+Rj5Gam5GXW9GYG8tSSNtbkdGJDYkUSI0RidGPkZgby1GIzYmRjAtRjs2LVEoJm1pbnVzO0YnRj5GQC9GREZCRkVGR0ZJRktGTS9GUFEsMC4yMjIyMjIyZW1GJy9GU0ZlcEZnb0Y+Rj4=">NiY3JUkjYTJHNiJJI2ExR0YlSSNhM0dGJTcmRiRGJkYnSSNhNEdGJSIiJSwmRiQiIiJGKSEiIg==</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">CUDA enabled : true 
Var. order selected: [a1, a2, a3, a4, a5, a6] </Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">Trying out polytopes, [1, 11] </Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">| Predicted eigenvalue size ............................ 18 | 
 .................... 
 | 30 X 30, 18, 12, 12 |
delta =  -0.010000 0.000000 0.000000 
Min monomial =       0      0      0, Max monomial =      3      0      2 
 ....................  1 
</Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">| Predicted eigenvalue size ............................ 18 | 
 .................... 
 | 30 X 30, 18, 12, 12 |
delta =  0.010000 0.000000 0.000000 
Min monomial =       1      0      0, Max monomial =      4      0      2 
 ....................  2 
</Text-field><Text-field style="Line Printed Output" layout="Line Printed Output">| Predicted eigenvalue size ............................ 18 | 
obtained a solution, 2
Solver := 30 * 30, rank := 30 worst case eigensolver size = 18
Solver := 30 * 30, Current T = [1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 18] 
Reducing the rows to get a reduced matrix with smaller basis.</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkobWZlbmNlZEc2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXJvd0dGJDZqbi1GIzYmLUYsNiotSSNtbkdGJDYkUSIxRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLUkjbW9HRiQ2LVEiLEYnRjYvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHUSV0cnVlRicvJSlzdHJldGNoeUdGPy8lKnN5bW1ldHJpY0dGPy8lKGxhcmdlb3BHRj8vJS5tb3ZhYmxlbGltaXRzR0Y/LyUnYWNjZW50R0Y/LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRictRjM2JFEiMEYnRjZGOUZTLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y/RjZGNi8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGOS1GIzYmLUYsNipGMkY5RlNGOUYyRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGMkY5RlNGOS1GMzYkUSIyRidGNkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRjJGOUYyRjlGU0ZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRjJGOUYyRjlGMkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRjJGOUYyRjlGY29GVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkYyRjlGY29GOUZTRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGMkY5RmNvRjlGMkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRjJGOUZjb0Y5RmNvRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGMkY5LUYzNiRRIjNGJ0Y2RjlGU0ZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRjJGOUZicUY5RjJGVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkYyRjlGYnFGOUZjb0ZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRmNvRjlGU0Y5RlNGVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZjb0Y5RlNGOUYyRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGY29GOUZTRjlGY29GVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZjb0Y5RjJGOUZTRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGY29GOUYyRjlGMkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRmNvRjlGMkY5RmNvRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGY29GOUZjb0Y5RlNGVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZjb0Y5RmNvRjlGMkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRmNvRjlGY29GOUZjb0ZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRmJxRjlGU0Y5RlNGVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZicUY5RlNGOUYyRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGYnFGOUZTRjlGY29GVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZicUY5RjJGOUZTRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNipGYnFGOUYyRjlGMkZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRmJxRjlGMkY5RmNvRlZGWUY2RjZGZW5GaG5GOS1GIzYmLUYsNiotRjM2JFEiNEYnRjZGOUZTRjlGU0ZWRllGNkY2RmVuRmhuRjktRiM2Ji1GLDYqRl12RjlGU0Y5RjJGVkZZRjZGNkZlbkZobkY5LUYjNiYtRiw2KkZddkY5RlNGOUZjb0ZWRllGNkY2RmVuRmhuRlZGWUY2RjZGZW5GaG4=">N0A3JSIiIiIiIUYlNyVGJEYlRiQ3JUYkRiUiIiM3JUYkRiRGJTclRiRGJEYkNyVGJEYkRig3JUYkRihGJTclRiRGKEYkNyVGJEYoRig3JUYkIiIkRiU3JUYkRjBGJDclRiRGMEYoNyVGKEYlRiU3JUYoRiVGJDclRihGJUYoNyVGKEYkRiU3JUYoRiRGJDclRihGJEYoNyVGKEYoRiU3JUYoRihGJDclRihGKEYoNyVGMEYlRiU3JUYwRiVGJDclRjBGJUYoNyVGMEYkRiU3JUYwRiRGJDclRjBGJEYoNyUiIiVGJUYlNyVGQ0YlRiQ3JUZDRiVGKA==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbW5HNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2JFEkMTIwRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYn">IiQ/Ig==</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">28 17 19 18 23 20 16 29 24 15 13 22 26 27 30 21 25 14 2 10 12 1 9 3 4 7 5 11 8 6</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbXNHRiQ2I1E7Um93fmluZGljZXN+dG9+YmV+ZGVsZXRlZH5GJy1JI21vR0YkNi1RKCZjb21tYTtGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHUSV0cnVlRicvJSlzdHJldGNoeUdGOC8lKnN5bW1ldHJpY0dGOC8lKGxhcmdlb3BHRjgvJS5tb3ZhYmxlbGltaXRzR0Y4LyUnYWNjZW50R0Y4LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRictRiw2I1EjW11GJ0Yz">NiRRO1Jvd35pbmRpY2VzfnRvfmJlfmRlbGV0ZWR+NiJRI1tdRiQ=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkobWZlbmNlZEdGJDYmLUYjNjotRiw2KC1GIzYmLUknbXRhYmxlR0YkNjUtSSRtdHJHRiQ2KC1JJG10ZEdGJDYoLUkjbW5HRiQ2JFEiMUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lKXJvd2FsaWduR1EhRicvJSxjb2x1bW5hbGlnbkdGRi8lK2dyb3VwYWxpZ25HRkYvJShyb3dzcGFuR0ZALyUrY29sdW1uc3BhbkdGQC1GOzYoLUY+NiRRIjBGJ0ZBRkRGR0ZJRktGTUZPRkRGR0ZJLyUmYWxpZ25HUSVheGlzRicvRkVRKWJhc2VsaW5lRicvRkhRJ2NlbnRlckYnL0ZKUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdRJXRydWVGJy8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRlxvLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmdvLyUmZnJhbWVHRmdvLyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dRJmZhbHNlRicvJS1lcXVhbGNvbHVtbnNHRmFwLyUtZGlzcGxheXN0eWxlR0ZhcC8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0Zkby8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGYXBGQUZBL0krbXNlbWFudGljc0dGJFEnTWF0cml4RicvJSVvcGVuR1EnJmxzcWI7RicvJSZjbG9zZUdRJyZyc3FiO0YnRmBxLUkjbW9HRiQ2LVEiLEYnRkEvJSZmZW5jZUdGYXAvJSpzZXBhcmF0b3JHRmluLyUpc3RyZXRjaHlHRmFwLyUqc3ltbWV0cmljR0ZhcC8lKGxhcmdlb3BHRmFwLyUubW92YWJsZWxpbWl0c0dGYXAvJSdhY2NlbnRHRmFwLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRidGMEZpcUYwRmlxRjBGaXFGMEZpcUYwRmlxRjBGaXFGMEZpcUYwRmlxLUYsNigtRiM2Ji1GNTY3RjctRjg2KEY6Rk9GOkZERkdGSS1GODYoRjpGTy1GOzYoLUY+NiRRIjJGJ0ZBRkRGR0ZJRktGTUZERkdGSUZURldGWUZlbkZnbkZqbkZdb0Zfb0Zib0Zlb0Zob0Zqb0ZccEZfcEZicEZkcEZmcEZpcEZbcUZecUZBRkFGYHFGY3FGZnFGYHFGaXEtSShtYWN0aW9uR0YkNiUtRiw2Ji1GIzYlLUY1NjgtRjg2Ji1GOzYoLUYjNiYtSSNtaUdGJDYlUSl+MTh+eH4zfkYnLyUnaXRhbGljR0Zpbi9GQlEnaXRhbGljRictRmB1NiVGYnFGY3VGZXVGW3FGQUZERkdGSUZLRk1GREZHRkktRjg2Ji1GOzYoLUYjNiYtRmB1NiVRLERhdGF+VHlwZTp+RidGY3VGZXUtRmB1NiVRKWFueXRoaW5nRidGY3VGZXVGW3FGQUZERkdGSUZLRk1GREZHRkktRjg2Ji1GOzYoLUYjNiYtRmB1NiVRKlN0b3JhZ2U6fkYnRmN1RmV1LUZgdTYlUSxyZWN0YW5ndWxhckYnRmN1RmV1RltxRkFGREZHRklGS0ZNRkRGR0ZJLUY4NiYtRjs2KC1GIzYmLUZgdTYlUShPcmRlcjp+RidGY3VGZXUtRmB1NiVRLkZvcnRyYW5fb3JkZXJGJ0ZjdUZldUZbcUZBRkRGR0ZJRktGTUZERkdGSUZURldGWUZlbkZnbkZqbkZdb0Zfb0Zib0Zlb0Zob0Zqb0ZccEZfcEZicEZkcEZmcEZpcEZbcUZBRkEvRmRxUSJbRicvRmdxUSJdRicvJSthY3Rpb250eXBlR1EtYnJvd3NlcnRhYmxlRicvJSlydGFibGVpZEdRNTE4NDQ2NzQ2NDM3Mjc3OTkzNzkwRidGW3FGXnFGQUZBRmNxRmZxLUZqcTYtUSgmY29tbWE7RidGQUZdckZfckZhckZjckZlckZnckZpckZbc0Zecy1GPjYkUSMzMEYnRkFGZ3gtSSNtc0dGJDYjUUkuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uRidGQQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyU3LS1JJ1JUQUJMRUdGKDYlIjVJISopNEZQa3VZJT0tSSdNQVRSSVhHRig2IzcjNyUtSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjFGKC1GNzYjUSIwRihGPUknTWF0cml4R0YlLUYuNiUiNUknKik0RlBrdVklPUYxRkAtRi42JSI1SS0qNEZQa3VZJT1GMUZALUYuNiUiNXFZZ3NzVlluVz1GMUZALUYuNiUiNXFfZ3NzVlluVz1GMUZALUYuNiUiNXFlZ3NzVlluVz1GMUZALUYuNiUiNXFrZ3NzVlluVz1GMUZALUYuNiUiNXFxZ3NzVlluVz1GMUZALUYuNiUiNXF3Z3NzVlluVz1GMUZALUYuNiUiNVljZXhzVlluVz0tRjI2IzclRjU3JUY2Rj1GNjclRjZGPS1GNzYjUSIyRihGQC1GLjYrIjUheiQqekZQa3VZJT1JKWFueXRoaW5nR0YmRkBJLHJlY3Rhbmd1bGFyR0YoSS5Gb3J0cmFuX29yZGVyR0YoNyIiIiM7IiIiIiM9O0ZnbyIiJCIjSVFJLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLkYoNyU3LS1GQDYjL0kkJWlkR0YoRjAtRkA2Iy9GYnBGQy1GQDYjL0ZicEZGLUZANiMvRmJwRkktRkA2Iy9GYnBGTC1GQDYjL0ZicEZPLUZANiMvRmJwRlItRkA2Iy9GYnBGVS1GQDYjL0ZicEZYLUZANiMvRmJwRmVuLUZANiMvRmJwRmBvRltwRlxw</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkobWZlbmNlZEdGJDYmLUYjNjotRiw2KC1GIzYmLUknbXRhYmxlR0YkNjUtSSRtdHJHRiQ2KC1JJG10ZEdGJDYoLUkjbW5HRiQ2JFEiMUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lKXJvd2FsaWduR1EhRicvJSxjb2x1bW5hbGlnbkdGRi8lK2dyb3VwYWxpZ25HRkYvJShyb3dzcGFuR0ZALyUrY29sdW1uc3BhbkdGQC1GOzYoLUY+NiRRIjBGJ0ZBRkRGR0ZJRktGTUZPRkRGR0ZJLyUmYWxpZ25HUSVheGlzRicvRkVRKWJhc2VsaW5lRicvRkhRJ2NlbnRlckYnL0ZKUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdRJXRydWVGJy8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRlxvLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmdvLyUmZnJhbWVHRmdvLyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dRJmZhbHNlRicvJS1lcXVhbGNvbHVtbnNHRmFwLyUtZGlzcGxheXN0eWxlR0ZhcC8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0Zkby8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGYXBGQUZBL0krbXNlbWFudGljc0dGJFEnTWF0cml4RicvJSVvcGVuR1EnJmxzcWI7RicvJSZjbG9zZUdRJyZyc3FiO0YnRmBxLUkjbW9HRiQ2LVEiLEYnRkEvJSZmZW5jZUdGYXAvJSpzZXBhcmF0b3JHRmluLyUpc3RyZXRjaHlHRmFwLyUqc3ltbWV0cmljR0ZhcC8lKGxhcmdlb3BHRmFwLyUubW92YWJsZWxpbWl0c0dGYXAvJSdhY2NlbnRHRmFwLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRidGMEZpcUYwRmlxRjBGaXFGMEZpcUYwRmlxRjBGaXFGMEZpcUYwRmlxLUYsNigtRiM2Ji1GNTY3RjctRjg2KEY6Rk9GOkZERkdGSS1GODYoRjpGTy1GOzYoLUY+NiRRIjJGJ0ZBRkRGR0ZJRktGTUZERkdGSUZURldGWUZlbkZnbkZqbkZdb0Zfb0Zib0Zlb0Zob0Zqb0ZccEZfcEZicEZkcEZmcEZpcEZbcUZecUZBRkFGYHFGY3FGZnFGYHFGaXEtSShtYWN0aW9uR0YkNiUtRiw2Ji1GIzYlLUY1NjgtRjg2Ji1GOzYoLUYjNiYtSSNtaUdGJDYlUSl+MTh+eH4zfkYnLyUnaXRhbGljR0Zpbi9GQlEnaXRhbGljRictRmB1NiVGYnFGY3VGZXVGW3FGQUZERkdGSUZLRk1GREZHRkktRjg2Ji1GOzYoLUYjNiYtRmB1NiVRLERhdGF+VHlwZTp+RidGY3VGZXUtRmB1NiVRKWFueXRoaW5nRidGY3VGZXVGW3FGQUZERkdGSUZLRk1GREZHRkktRjg2Ji1GOzYoLUYjNiYtRmB1NiVRKlN0b3JhZ2U6fkYnRmN1RmV1LUZgdTYlUSxyZWN0YW5ndWxhckYnRmN1RmV1RltxRkFGREZHRklGS0ZNRkRGR0ZJLUY4NiYtRjs2KC1GIzYmLUZgdTYlUShPcmRlcjp+RidGY3VGZXUtRmB1NiVRLkZvcnRyYW5fb3JkZXJGJ0ZjdUZldUZbcUZBRkRGR0ZJRktGTUZERkdGSUZURldGWUZlbkZnbkZqbkZdb0Zfb0Zib0Zlb0Zob0Zqb0ZccEZfcEZicEZkcEZmcEZpcEZbcUZBRkEvRmRxUSJbRicvRmdxUSJdRicvJSthY3Rpb250eXBlR1EtYnJvd3NlcnRhYmxlRicvJSlydGFibGVpZEdRNTE4NDQ2NzQ2NDM3Mjc3OTkzNzkwRidGW3FGXnFGQUZBRmNxRmZxLUZqcTYtUSgmY29tbWE7RidGQUZdckZfckZhckZjckZlckZnckZpckZbc0Zecy1GPjYkUSMzMEYnRkFGZ3hGanhGQQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyU3LS1JJ1JUQUJMRUdGKDYlIjVJISopNEZQa3VZJT0tSSdNQVRSSVhHRig2IzcjNyUtSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjFGKC1GNzYjUSIwRihGPUknTWF0cml4R0YlLUYuNiUiNUknKik0RlBrdVklPUYxRkAtRi42JSI1SS0qNEZQa3VZJT1GMUZALUYuNiUiNXFZZ3NzVlluVz1GMUZALUYuNiUiNXFfZ3NzVlluVz1GMUZALUYuNiUiNXFlZ3NzVlluVz1GMUZALUYuNiUiNXFrZ3NzVlluVz1GMUZALUYuNiUiNXFxZ3NzVlluVz1GMUZALUYuNiUiNXF3Z3NzVlluVz1GMUZALUYuNiUiNVljZXhzVlluVz0tRjI2IzclRjU3JUY2Rj1GNjclRjZGPS1GNzYjUSIyRihGQC1GLjYrIjUheiQqekZQa3VZJT1JKWFueXRoaW5nR0YmRkBJLHJlY3Rhbmd1bGFyR0YoSS5Gb3J0cmFuX29yZGVyR0YoNyIiIiM7IiIiIiM9O0ZnbyIiJCIjSUZbcDclNy0tRkA2Iy9JJCVpZEdGKEYwLUZANiMvRmFwRkMtRkA2Iy9GYXBGRi1GQDYjL0ZhcEZJLUZANiMvRmFwRkwtRkA2Iy9GYXBGTy1GQDYjL0ZhcEZSLUZANiMvRmFwRlUtRkA2Iy9GYXBGWC1GQDYjL0ZhcEZlbi1GQDYjL0ZhcEZgb0ZbcEZbcA==</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">Sparse basis size =  30 
 No. of rows = 30 </Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L4" drawlabel="true" applyint="true" applyrational="true" applyexponent="false"><Text-field prompt="&gt; " style="Maple Input" layout="Normal">hiddenVarNumber := acthiddenvarnumber:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">hiddenVar := parse(cat(&quot;a&quot;, hiddenVarNumber)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">unHiddenVars := select(v -&gt; v &lt;&gt; hiddenVar, vars):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">vars := [op(unHiddenVars), hiddenVar]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">reducedeqs :=[]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for ei to numelems(eqs) do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	reducedeqs := [op(reducedeqs), evalm(Mreduced[ei,..] &amp;* originalbasis)]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"># With the sparse basis obtained we construct a symbolic resultant matrix </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"># which is to be solved for eigenvalues.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#======================================================================================		</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">temp := convert(monmultiples[-1], list, nested = true):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">bbs := map(proc (i) options operator, arrow; select(proc (j) options operator, arrow; sparsebasis[j] = [temp[i][1], op(temp[i][2..])] end proc, [seq(1 .. numelems(sparsebasis))])[1] end proc, [seq(1 .. numelems(temp))]):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">gbs := convert(convert([seq(1 .. numelems(sparsebasis))], set) minus convert(bbs, set), list):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sparsebasis := sparsebasis[[op(bbs), op(gbs)]]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Cred := polytomat(convert(monmultiples, list), sparsebasis, reducedeqs, unHiddenVars, Bn, Bn):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">degreehidvar := max(map(proc (f) options operator, arrow; degree(f, cat('a',hiddenVarNumber)) end proc, Cred)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">allcs := map(proc (i) options operator, arrow; coeff(Cred, cat('a',hiddenVarNumber)^i) end proc, [seq(1 .. degreehidvar)]):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Cs := convert([coeff(Cred*cat('a',hiddenVarNumber), cat('a',hiddenVarNumber)), op(allcs)], Matrix):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">printf(&quot;The size of sparse basis is %d .\134n&quot;, Bn);</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">The size of sparse basis is 30 .</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L8" drawlabel="true" applyint="true" applyrational="true" applyexponent="false"><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Generating the solver and the template to calculate var values from eigen vectors</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#======================================================================================</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">sparsefinalbasis := LinearAlgebra[Transpose](convert(sparsebasis[[seq(1..numelems(bbs))]], Matrix)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">printf(&quot;Generating template to be used for extracting values of the un-hidden variables \134n&quot;);</Font></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(SolveTools): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">unassign('d'):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">lambdas := Matrix(Size(sparsefinalbasis)[2], 1, symbol = 'd'):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">solForm := Matrix(Size(sparsefinalbasis)[2], Size(vars)[2]-1, symbol = 's'): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i to Size(vars)[2]-1 do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	eVec := Matrix(Size(vars)[2], 1, 0): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	eVec[i, 1] := 1: </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	polEqs := Matrix([[convert(sparsefinalbasis, Matrix)], [Matrix(1, Size(sparsefinalbasis)[2], 1)]]): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	temp := LinearAlgebra[LinearSolve](polEqs, eVec, free = 'd'): </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	for j to Size(sparsefinalbasis)[2] do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		solForm[j, i] := temp[j]:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	end do </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do: </Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for k to ArrayTools[Size](sparsefinalbasis)[2] do 
	assign(lambdas[k, 1], 0): 
end do: 
solForm := evalm(solForm):</Text-field>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">Generating template to be used for extracting values of the un-hidden variables </Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L48" drawlabel="true" applyint="true" applyrational="true" applyexponent="false"><Text-field prompt="&gt; " style="Maple Input" layout="Normal">fd := fopen(&quot;patch.m&quot;, READ,TEXT):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	temp := readbytes(fd, infinity):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">fclose(fd):

solverFileName := convert(cat(solverFolderName, &quot;/solver2.m&quot;), string):
fd := fopen(solverFileName, WRITE, TEXT):
writeline(fd, &quot;function[PEPsolutions] = solve(data) &quot;):
writeline(fd, cat(&quot;hiddenvarnumber = &quot;,selectedhiddenvarind, &quot;;&quot;)):
writeline(fd, cat(op(map(i -&gt; cat(&quot;c&quot;, i, &quot; = data(&quot;, i, &quot;);&quot;), [seq(1..noofdatacoeff)])))): 

for i to numoftempts do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	writeline(fd, cat(&quot;t&quot;,i, &quot; = &quot;,tempts[i] ,&quot;;&quot;)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">writeline(fd, convert(cat(&quot;M = zeros(&quot;,numelems(eqs), &quot;,&quot;, numelems(originalbasis),&quot;);&quot; ),string)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for i to numelems(eqs) do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	for j to numelems(originalbasis) do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		if Msymbolic[i,j] &lt;&gt; 0 then</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">			writeline(fd, cat(&quot;M(&quot;,i,&quot;,&quot;,j,&quot;) = &quot;, Msymbolic[i,j], &quot;;&quot;)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		end if:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do:

writeline(fd, cat(&quot;M = [rref(M(1:&quot;, noofrowstoreduce, &quot;,:)); M(&quot;, (noofrowstoreduce+1), &quot;:end,:)];&quot;)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">writeline(fd, cat(op(map(i -&gt; cat(&quot;nc&quot;, i, &quot; = M(&quot;, nc[i], &quot;);&quot;), [seq(1..numofncs)]))) ): 

writeline(fd, convert(cat(&quot;Cs = zeros(&quot;,ArrayTools[Size](Cs)[1], &quot;,&quot;, ArrayTools[Size](Cs)[2],&quot;);&quot; ),string)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for j to ArrayTools[Size](Cs)[1] do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	for k to ArrayTools[Size](Cs)[2] do</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		if Cs[j,k] &lt;&gt; 0 then</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		    writeline(fd, convert(cat(&quot;Cs(&quot;,j, &quot;,&quot;, k, &quot;) = &quot;, convert(simplify(Cs[j,k]),string), &quot;;&quot; ),string)):</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">		end if:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">	end do:</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">end do:
writeline(fd, CodeGeneration[Matlab](convert(solForm,list), resultname=&quot;solForm&quot;, output=string)):
writeline(fd, cat(&quot;allCss = mat2cell(Cs, &quot;, numelems(sparsebasis), &quot;, ones(1,2) * &quot;, numelems(sparsebasis), &quot;);&quot;)):
writeline(fd, cat(&quot;noOfVars = <Font encoding="UTF-8">&quot;,(numelems(vars)-1), &quot;; \134nC0 = allCss{1}; \134nC1 = allCss{2};&quot;)):</Font>
writeline(fd, cat(&quot;A1 = C0(1:end-&quot;, numelems(bbs), &quot;,1:&quot;, numelems(bbs), &quot;);&quot;)):
writeline(fd, cat(&quot;A2 = C0(1:end-&quot;, numelems(bbs), &quot;,&quot;, (numelems(bbs)+1), &quot;:end);&quot;)):
writeline(fd, cat(&quot;B1 = C0(end-&quot;, numelems(bbs), &quot;+1 : end,1:&quot;, numelems(bbs), &quot;);&quot;)):
writeline(fd, cat(&quot;B2 = C0(end-&quot;, numelems(bbs), &quot;+1 : end, &quot;, (numelems(bbs)+1), &quot;:end);&quot;)):
writebytes(fd, temp):
<Font encoding="UTF-8">writeline(fd, &quot;\134nend&quot;):</Font>
fclose(fd): 

print(&quot;..........................................&quot;):</Text-field>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1FLLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uRic=">UUsuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi42Ig==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L15" drawlabel="true" applyint="true" applyrational="true" applyexponent="false"><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Group><RTable handle="18446746437277993790">TTdSMApJQVJUQUJMRV9TQVZFLzE4NDQ2NzQ2NDM3Mjc3OTkzNzkwWCwlKWFueXRoaW5nRzYiRiVbZ2whIiUhISEjVyIzIiQiIiJGJkYmRiZGJkYmRiZGJkYmIiIjRidGJ0YnRidGJyIiJEYoRigiIiFGKUYpRiZGJkYmRidGJ0YnRilGKUYpRiZGJkYmRilGKUYpRilGJkYnRilGJkYnRilGJkYnRilGJkYnRilGJkYnRilGJkYnRiU=</RTable>
</Worksheet>