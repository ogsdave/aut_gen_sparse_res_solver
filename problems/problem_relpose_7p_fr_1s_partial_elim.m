function[eqsHandler, cfg] = problem_relpose_7p_fr_1s_partial_elim()
%% Configuring the solver
cfg = retrieve_solver_cfg();
eqsHandler = @retrieve_eqs;
end
%% The polynomial system
function eqs = retrieve_eqs(a1,a2,a3,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35) 
eqs(1) = -a1*a3 + a1*c2 + a2*a3*c1 + a2*c3 + a3*c4 + c5;
eqs(2) = -a1^3*c12*c32 + a1^3*c17*c27 - a1^2*a2*a3*c11*c32 - a1^2*a2*a3*c12*c31 + a1^2*a2*a3*c16*c27 + a1^2*a2*a3*c17*c26 + a1^2*a2*c7*c32 - a1^2*a2*c12*c33 - a1^2*a2*c13*c32 - a1^2*a2*c17*c22 + a1^2*a2*c17*c28 + a1^2*a2*c18*c27 - a1^2*a3*c12*c34 - a1^2*a3*c14*c32 + a1^2*a3*c17*c29 + a1^2*a3*c19*c27 - a1^2*c7*c27 + a1^2*c12*c22 - a1^2*c12*c35 - a1^2*c15*c32 + a1^2*c17*c30 + a1^2*c20*c27 - a1*a2^2*a3^2*c11*c31 + a1*a2^2*a3^2*c16*c26 + a1*a2^2*a3*c6*c32 + a1*a2^2*a3*c7*c31 - a1*a2^2*a3*c11*c33 - a1*a2^2*a3*c13*c31 - a1*a2^2*a3*c16*c22 + a1*a2^2*a3*c16*c28 - a1*a2^2*a3*c17*c21 + a1*a2^2*a3*c18*c26 + a1*a2^2*c7*c33 + a1*a2^2*c8*c32 - a1*a2^2*c13*c33 - a1*a2^2*c17*c23 - a1*a2^2*c18*c22 + a1*a2^2*c18*c28 - a1*a2*a3^2*c11*c34 - a1*a2*a3^2*c14*c31 + a1*a2*a3^2*c16*c29 + a1*a2*a3^2*c19*c26 - a1*a2*a3*c6*c27 - a1*a2*a3*c7*c26 + a1*a2*a3*c7*c34 + a1*a2*a3*c9*c32 + a1*a2*a3*c11*c22 - a1*a2*a3*c11*c35 + a1*a2*a3*c12*c21 - a1*a2*a3*c13*c34 - a1*a2*a3*c14*c33 - a1*a2*a3*c15*c31 + a1*a2*a3*c16*c30 - a1*a2*a3*c17*c24 + a1*a2*a3*c18*c29 - a1*a2*a3*c19*c22 + a1*a2*a3*c19*c28 + a1*a2*a3*c20*c26 - a1*a2*c7*c28 + a1*a2*c7*c35 - a1*a2*c8*c27 + a1*a2*c10*c32 + a1*a2*c12*c23 + a1*a2*c13*c22 - a1*a2*c13*c35 - a1*a2*c15*c33 - a1*a2*c17*c25 + a1*a2*c18*c30 - a1*a2*c20*c22 + a1*a2*c20*c28 - a1*a3^2*c14*c34 + a1*a3^2*c19*c29 - a1*a3*c7*c29 - a1*a3*c9*c27 + a1*a3*c12*c24 + a1*a3*c14*c22 - a1*a3*c14*c35 - a1*a3*c15*c34 + a1*a3*c19*c30 + a1*a3*c20*c29 - a1*c7*c30 - a1*c10*c27 + a1*c12*c25 + a1*c15*c22 - a1*c15*c35 + a1*c20*c30 + a2^3*a3^2*c6*c31 - a2^3*a3^2*c16*c21 + a2^3*a3*c6*c33 + a2^3*a3*c8*c31 - a2^3*a3*c16*c23 - a2^3*a3*c18*c21 + a2^3*c8*c33 - a2^3*c18*c23 - a2^2*a3^2*c6*c26 + a2^2*a3^2*c6*c34 + a2^2*a3^2*c9*c31 + a2^2*a3^2*c11*c21 - a2^2*a3^2*c16*c24 - a2^2*a3^2*c19*c21 - a2^2*a3*c6*c28 + a2^2*a3*c6*c35 - a2^2*a3*c8*c26 + a2^2*a3*c8*c34 + a2^2*a3*c9*c33 + a2^2*a3*c10*c31 + a2^2*a3*c11*c23 + a2^2*a3*c13*c21 - a2^2*a3*c16*c25 - a2^2*a3*c18*c24 - a2^2*a3*c19*c23 - a2^2*a3*c20*c21 - a2^2*c8*c28 + a2^2*c8*c35 + a2^2*c10*c33 + a2^2*c13*c23 - a2^2*c18*c25 - a2^2*c20*c23 - a2*a3^2*c6*c29 - a2*a3^2*c9*c26 + a2*a3^2*c9*c34 + a2*a3^2*c11*c24 + a2*a3^2*c14*c21 - a2*a3^2*c19*c24 - a2*a3*c6*c30 - a2*a3*c8*c29 - a2*a3*c9*c28 + a2*a3*c9*c35 - a2*a3*c10*c26 + a2*a3*c10*c34 + a2*a3*c11*c25 + a2*a3*c13*c24 + a2*a3*c14*c23 + a2*a3*c15*c21 - a2*a3*c19*c25 - a2*a3*c20*c24 - a2*c8*c30 - a2*c10*c28 + a2*c10*c35 + a2*c13*c25 + a2*c15*c23 - a2*c20*c25 - a3^2*c9*c29 + a3^2*c14*c24 - a3*c9*c30 - a3*c10*c29 + a3*c14*c25 + a3*c15*c24 - c10*c30 + c15*c25;
eqs(3) = a1^3*a2*c7*c17 + a1^3*a2*c22*c32 - a1^3*c7*c12 - a1^3*c22*c27 + a1^2*a2^2*a3*c6*c17 + a1^2*a2^2*a3*c7*c16 + a1^2*a2^2*a3*c21*c32 + a1^2*a2^2*a3*c22*c31 + a1^2*a2^2*c7*c18 + a1^2*a2^2*c8*c17 + a1^2*a2^2*c12*c17 + a1^2*a2^2*c22*c33 + a1^2*a2^2*c23*c32 + a1^2*a2^2*c27*c32 - a1^2*a2*a3*c6*c12 - a1^2*a2*a3*c7*c11 + a1^2*a2*a3*c7*c19 + a1^2*a2*a3*c9*c17 - a1^2*a2*a3*c21*c27 - a1^2*a2*a3*c22*c26 + a1^2*a2*a3*c22*c34 + a1^2*a2*a3*c24*c32 - a1^2*a2*c7*c13 + a1^2*a2*c7*c20 - a1^2*a2*c8*c12 + a1^2*a2*c10*c17 - a1^2*a2*c12^2 + a1^2*a2*c17^2 - a1^2*a2*c22*c28 + a1^2*a2*c22*c35 - a1^2*a2*c23*c27 + a1^2*a2*c25*c32 - a1^2*a2*c27^2 + a1^2*a2*c32^2 - a1^2*a3*c7*c14 - a1^2*a3*c9*c12 - a1^2*a3*c22*c29 - a1^2*a3*c24*c27 - a1^2*c7*c15 - a1^2*c10*c12 - a1^2*c12*c17 - a1^2*c22*c30 - a1^2*c25*c27 - a1^2*c27*c32 + a1*a2^3*a3^2*c6*c16 + a1*a2^3*a3^2*c21*c31 + a1*a2^3*a3*c6*c18 + a1*a2^3*a3*c8*c16 + a1*a2^3*a3*c11*c17 + a1*a2^3*a3*c12*c16 + a1*a2^3*a3*c21*c33 + a1*a2^3*a3*c23*c31 + a1*a2^3*a3*c26*c32 + a1*a2^3*a3*c27*c31 + a1*a2^3*c8*c18 + a1*a2^3*c12*c18 + a1*a2^3*c13*c17 + a1*a2^3*c23*c33 + a1*a2^3*c27*c33 + a1*a2^3*c28*c32 - a1*a2^2*a3^2*c6*c11 + a1*a2^2*a3^2*c6*c19 + a1*a2^2*a3^2*c9*c16 - a1*a2^2*a3^2*c21*c26 + a1*a2^2*a3^2*c21*c34 + a1*a2^2*a3^2*c24*c31 - a1*a2^2*a3*c6*c13 + a1*a2^2*a3*c6*c20 - a1*a2^2*a3*c8*c11 + a1*a2^2*a3*c8*c19 + a1*a2^2*a3*c9*c18 + a1*a2^2*a3*c10*c16 - 2*a1*a2^2*a3*c11*c12 + a1*a2^2*a3*c12*c19 + a1*a2^2*a3*c14*c17 + 2*a1*a2^2*a3*c16*c17 - a1*a2^2*a3*c21*c28 + a1*a2^2*a3*c21*c35 - a1*a2^2*a3*c23*c26 + a1*a2^2*a3*c23*c34 + a1*a2^2*a3*c24*c33 + a1*a2^2*a3*c25*c31 - 2*a1*a2^2*a3*c26*c27 + a1*a2^2*a3*c27*c34 + a1*a2^2*a3*c29*c32 + 2*a1*a2^2*a3*c31*c32 - a1*a2^2*c8*c13 + a1*a2^2*c8*c20 + a1*a2^2*c10*c18 - 2*a1*a2^2*c12*c13 + a1*a2^2*c12*c20 + a1*a2^2*c15*c17 + 2*a1*a2^2*c17*c18 - a1*a2^2*c23*c28 + a1*a2^2*c23*c35 + a1*a2^2*c25*c33 - 2*a1*a2^2*c27*c28 + a1*a2^2*c27*c35 + a1*a2^2*c30*c32 + 2*a1*a2^2*c32*c33 - a1*a2*a3^2*c6*c14 - a1*a2*a3^2*c9*c11 + a1*a2*a3^2*c9*c19 - a1*a2*a3^2*c21*c29 - a1*a2*a3^2*c24*c26 + a1*a2*a3^2*c24*c34 - a1*a2*a3*c6*c15 - a1*a2*a3*c8*c14 - a1*a2*a3*c9*c13 + a1*a2*a3*c9*c20 - a1*a2*a3*c10*c11 + a1*a2*a3*c10*c19 - a1*a2*a3*c11*c17 - 2*a1*a2*a3*c12*c14 - a1*a2*a3*c12*c16 + 2*a1*a2*a3*c17*c19 - a1*a2*a3*c21*c30 - a1*a2*a3*c23*c29 - a1*a2*a3*c24*c28 + a1*a2*a3*c24*c35 - a1*a2*a3*c25*c26 + a1*a2*a3*c25*c34 - a1*a2*a3*c26*c32 - 2*a1*a2*a3*c27*c29 - a1*a2*a3*c27*c31 + 2*a1*a2*a3*c32*c34 - a1*a2*c8*c15 - a1*a2*c10*c13 + a1*a2*c10*c20 - 2*a1*a2*c12*c15 - a1*a2*c12*c18 - a1*a2*c13*c17 + 2*a1*a2*c17*c20 - a1*a2*c23*c30 - a1*a2*c25*c28 + a1*a2*c25*c35 - 2*a1*a2*c27*c30 - a1*a2*c27*c33 - a1*a2*c28*c32 + 2*a1*a2*c32*c35 - a1*a3^2*c9*c14 - a1*a3^2*c24*c29 - a1*a3*c9*c15 - a1*a3*c10*c14 - a1*a3*c12*c19 - a1*a3*c14*c17 - a1*a3*c24*c30 - a1*a3*c25*c29 - a1*a3*c27*c34 - a1*a3*c29*c32 - a1*c10*c15 - a1*c12*c20 - a1*c15*c17 - a1*c25*c30 - a1*c27*c35 - a1*c30*c32 + a2^4*a3^2*c11*c16 + a2^4*a3^2*c26*c31 + a2^4*a3*c11*c18 + a2^4*a3*c13*c16 + a2^4*a3*c26*c33 + a2^4*a3*c28*c31 + a2^4*c13*c18 + a2^4*c28*c33 - a2^3*a3^2*c11^2 + a2^3*a3^2*c11*c19 + a2^3*a3^2*c14*c16 + a2^3*a3^2*c16^2 - a2^3*a3^2*c26^2 + a2^3*a3^2*c26*c34 + a2^3*a3^2*c29*c31 + a2^3*a3^2*c31^2 - 2*a2^3*a3*c11*c13 + a2^3*a3*c11*c20 + a2^3*a3*c13*c19 + a2^3*a3*c14*c18 + a2^3*a3*c15*c16 + 2*a2^3*a3*c16*c18 - 2*a2^3*a3*c26*c28 + a2^3*a3*c26*c35 + a2^3*a3*c28*c34 + a2^3*a3*c29*c33 + a2^3*a3*c30*c31 + 2*a2^3*a3*c31*c33 - a2^3*c13^2 + a2^3*c13*c20 + a2^3*c15*c18 + a2^3*c18^2 - a2^3*c28^2 + a2^3*c28*c35 + a2^3*c30*c33 + a2^3*c33^2 - 2*a2^2*a3^2*c11*c14 - a2^2*a3^2*c11*c16 + a2^2*a3^2*c14*c19 + 2*a2^2*a3^2*c16*c19 - 2*a2^2*a3^2*c26*c29 - a2^2*a3^2*c26*c31 + a2^2*a3^2*c29*c34 + 2*a2^2*a3^2*c31*c34 - 2*a2^2*a3*c11*c15 - a2^2*a3*c11*c18 - 2*a2^2*a3*c13*c14 - a2^2*a3*c13*c16 + a2^2*a3*c14*c20 + a2^2*a3*c15*c19 + 2*a2^2*a3*c16*c20 + 2*a2^2*a3*c18*c19 - 2*a2^2*a3*c26*c30 - a2^2*a3*c26*c33 - 2*a2^2*a3*c28*c29 - a2^2*a3*c28*c31 + a2^2*a3*c29*c35 + a2^2*a3*c30*c34 + 2*a2^2*a3*c31*c35 + 2*a2^2*a3*c33*c34 - 2*a2^2*c13*c15 - a2^2*c13*c18 + a2^2*c15*c20 + 2*a2^2*c18*c20 - 2*a2^2*c28*c30 - a2^2*c28*c33 + a2^2*c30*c35 + 2*a2^2*c33*c35 - a2*a3^2*c11*c19 - a2*a3^2*c14^2 - a2*a3^2*c14*c16 + a2*a3^2*c19^2 - a2*a3^2*c26*c34 - a2*a3^2*c29^2 - a2*a3^2*c29*c31 + a2*a3^2*c34^2 - a2*a3*c11*c20 - a2*a3*c13*c19 - 2*a2*a3*c14*c15 - a2*a3*c14*c18 - a2*a3*c15*c16 + 2*a2*a3*c19*c20 - a2*a3*c26*c35 - a2*a3*c28*c34 - 2*a2*a3*c29*c30 - a2*a3*c29*c33 - a2*a3*c30*c31 + 2*a2*a3*c34*c35 - a2*c13*c20 - a2*c15^2 - a2*c15*c18 + a2*c20^2 - a2*c28*c35 - a2*c30^2 - a2*c30*c33 + a2*c35^2 - a3^2*c14*c19 - a3^2*c29*c34 - a3*c14*c20 - a3*c15*c19 - a3*c29*c35 - a3*c30*c34 - c15*c20 - c30*c35;
eqs(4) = a1^4*c7*c17 + a1^4*c22*c32 + a1^3*a2*a3*c6*c17 + a1^3*a2*a3*c7*c16 + a1^3*a2*a3*c21*c32 + a1^3*a2*a3*c22*c31 + a1^3*a2*c7*c18 + a1^3*a2*c8*c17 + a1^3*a2*c12*c17 + a1^3*a2*c22*c33 + a1^3*a2*c23*c32 + a1^3*a2*c27*c32 + a1^3*a3*c7*c19 + a1^3*a3*c9*c17 + a1^3*a3*c22*c34 + a1^3*a3*c24*c32 - a1^3*c7^2 + a1^3*c7*c20 + a1^3*c10*c17 + a1^3*c17^2 - a1^3*c22^2 + a1^3*c22*c35 + a1^3*c25*c32 + a1^3*c32^2 + a1^2*a2^2*a3^2*c6*c16 + a1^2*a2^2*a3^2*c21*c31 + a1^2*a2^2*a3*c6*c18 + a1^2*a2^2*a3*c8*c16 + a1^2*a2^2*a3*c11*c17 + a1^2*a2^2*a3*c12*c16 + a1^2*a2^2*a3*c21*c33 + a1^2*a2^2*a3*c23*c31 + a1^2*a2^2*a3*c26*c32 + a1^2*a2^2*a3*c27*c31 + a1^2*a2^2*c8*c18 + a1^2*a2^2*c12*c18 + a1^2*a2^2*c13*c17 + a1^2*a2^2*c23*c33 + a1^2*a2^2*c27*c33 + a1^2*a2^2*c28*c32 + a1^2*a2*a3^2*c6*c19 + a1^2*a2*a3^2*c9*c16 + a1^2*a2*a3^2*c21*c34 + a1^2*a2*a3^2*c24*c31 - 2*a1^2*a2*a3*c6*c7 + a1^2*a2*a3*c6*c20 + a1^2*a2*a3*c8*c19 + a1^2*a2*a3*c9*c18 + a1^2*a2*a3*c10*c16 + a1^2*a2*a3*c12*c19 + a1^2*a2*a3*c14*c17 + 2*a1^2*a2*a3*c16*c17 - 2*a1^2*a2*a3*c21*c22 + a1^2*a2*a3*c21*c35 + a1^2*a2*a3*c23*c34 + a1^2*a2*a3*c24*c33 + a1^2*a2*a3*c25*c31 + a1^2*a2*a3*c27*c34 + a1^2*a2*a3*c29*c32 + 2*a1^2*a2*a3*c31*c32 - 2*a1^2*a2*c7*c8 - a1^2*a2*c7*c12 + a1^2*a2*c8*c20 + a1^2*a2*c10*c18 + a1^2*a2*c12*c20 + a1^2*a2*c15*c17 + 2*a1^2*a2*c17*c18 - 2*a1^2*a2*c22*c23 - a1^2*a2*c22*c27 + a1^2*a2*c23*c35 + a1^2*a2*c25*c33 + a1^2*a2*c27*c35 + a1^2*a2*c30*c32 + 2*a1^2*a2*c32*c33 + a1^2*a3^2*c9*c19 + a1^2*a3^2*c24*c34 - 2*a1^2*a3*c7*c9 + a1^2*a3*c9*c20 + a1^2*a3*c10*c19 + 2*a1^2*a3*c17*c19 - 2*a1^2*a3*c22*c24 + a1^2*a3*c24*c35 + a1^2*a3*c25*c34 + 2*a1^2*a3*c32*c34 - 2*a1^2*c7*c10 - a1^2*c7*c17 + a1^2*c10*c20 + 2*a1^2*c17*c20 - 2*a1^2*c22*c25 - a1^2*c22*c32 + a1^2*c25*c35 + 2*a1^2*c32*c35 + a1*a2^3*a3^2*c11*c16 + a1*a2^3*a3^2*c26*c31 + a1*a2^3*a3*c11*c18 + a1*a2^3*a3*c13*c16 + a1*a2^3*a3*c26*c33 + a1*a2^3*a3*c28*c31 + a1*a2^3*c13*c18 + a1*a2^3*c28*c33 - a1*a2^2*a3^2*c6^2 + a1*a2^2*a3^2*c11*c19 + a1*a2^2*a3^2*c14*c16 + a1*a2^2*a3^2*c16^2 - a1*a2^2*a3^2*c21^2 + a1*a2^2*a3^2*c26*c34 + a1*a2^2*a3^2*c29*c31 + a1*a2^2*a3^2*c31^2 - 2*a1*a2^2*a3*c6*c8 - a1*a2^2*a3*c6*c12 - a1*a2^2*a3*c7*c11 + a1*a2^2*a3*c11*c20 + a1*a2^2*a3*c13*c19 + a1*a2^2*a3*c14*c18 + a1*a2^2*a3*c15*c16 + 2*a1*a2^2*a3*c16*c18 - 2*a1*a2^2*a3*c21*c23 - a1*a2^2*a3*c21*c27 - a1*a2^2*a3*c22*c26 + a1*a2^2*a3*c26*c35 + a1*a2^2*a3*c28*c34 + a1*a2^2*a3*c29*c33 + a1*a2^2*a3*c30*c31 + 2*a1*a2^2*a3*c31*c33 - a1*a2^2*c7*c13 - a1*a2^2*c8^2 - a1*a2^2*c8*c12 + a1*a2^2*c13*c20 + a1*a2^2*c15*c18 + a1*a2^2*c18^2 - a1*a2^2*c22*c28 - a1*a2^2*c23^2 - a1*a2^2*c23*c27 + a1*a2^2*c28*c35 + a1*a2^2*c30*c33 + a1*a2^2*c33^2 - 2*a1*a2*a3^2*c6*c9 + a1*a2*a3^2*c14*c19 + 2*a1*a2*a3^2*c16*c19 - 2*a1*a2*a3^2*c21*c24 + a1*a2*a3^2*c29*c34 + 2*a1*a2*a3^2*c31*c34 - 2*a1*a2*a3*c6*c10 - a1*a2*a3*c6*c17 - a1*a2*a3*c7*c14 - a1*a2*a3*c7*c16 - 2*a1*a2*a3*c8*c9 - a1*a2*a3*c9*c12 + a1*a2*a3*c14*c20 + a1*a2*a3*c15*c19 + 2*a1*a2*a3*c16*c20 + 2*a1*a2*a3*c18*c19 - 2*a1*a2*a3*c21*c25 - a1*a2*a3*c21*c32 - a1*a2*a3*c22*c29 - a1*a2*a3*c22*c31 - 2*a1*a2*a3*c23*c24 - a1*a2*a3*c24*c27 + a1*a2*a3*c29*c35 + a1*a2*a3*c30*c34 + 2*a1*a2*a3*c31*c35 + 2*a1*a2*a3*c33*c34 - a1*a2*c7*c15 - a1*a2*c7*c18 - 2*a1*a2*c8*c10 - a1*a2*c8*c17 - a1*a2*c10*c12 + a1*a2*c15*c20 + 2*a1*a2*c18*c20 - a1*a2*c22*c30 - a1*a2*c22*c33 - 2*a1*a2*c23*c25 - a1*a2*c23*c32 - a1*a2*c25*c27 + a1*a2*c30*c35 + 2*a1*a2*c33*c35 - a1*a3^2*c9^2 + a1*a3^2*c19^2 - a1*a3^2*c24^2 + a1*a3^2*c34^2 - a1*a3*c7*c19 - 2*a1*a3*c9*c10 - a1*a3*c9*c17 + 2*a1*a3*c19*c20 - a1*a3*c22*c34 - 2*a1*a3*c24*c25 - a1*a3*c24*c32 + 2*a1*a3*c34*c35 - a1*c7*c20 - a1*c10^2 - a1*c10*c17 + a1*c20^2 - a1*c22*c35 - a1*c25^2 - a1*c25*c32 + a1*c35^2 - a2^3*a3^2*c6*c11 - a2^3*a3^2*c21*c26 - a2^3*a3*c6*c13 - a2^3*a3*c8*c11 - a2^3*a3*c21*c28 - a2^3*a3*c23*c26 - a2^3*c8*c13 - a2^3*c23*c28 - a2^2*a3^2*c6*c14 - a2^2*a3^2*c6*c16 - a2^2*a3^2*c9*c11 - a2^2*a3^2*c21*c29 - a2^2*a3^2*c21*c31 - a2^2*a3^2*c24*c26 - a2^2*a3*c6*c15 - a2^2*a3*c6*c18 - a2^2*a3*c8*c14 - a2^2*a3*c8*c16 - a2^2*a3*c9*c13 - a2^2*a3*c10*c11 - a2^2*a3*c21*c30 - a2^2*a3*c21*c33 - a2^2*a3*c23*c29 - a2^2*a3*c23*c31 - a2^2*a3*c24*c28 - a2^2*a3*c25*c26 - a2^2*c8*c15 - a2^2*c8*c18 - a2^2*c10*c13 - a2^2*c23*c30 - a2^2*c23*c33 - a2^2*c25*c28 - a2*a3^2*c6*c19 - a2*a3^2*c9*c14 - a2*a3^2*c9*c16 - a2*a3^2*c21*c34 - a2*a3^2*c24*c29 - a2*a3^2*c24*c31 - a2*a3*c6*c20 - a2*a3*c8*c19 - a2*a3*c9*c15 - a2*a3*c9*c18 - a2*a3*c10*c14 - a2*a3*c10*c16 - a2*a3*c21*c35 - a2*a3*c23*c34 - a2*a3*c24*c30 - a2*a3*c24*c33 - a2*a3*c25*c29 - a2*a3*c25*c31 - a2*c8*c20 - a2*c10*c15 - a2*c10*c18 - a2*c23*c35 - a2*c25*c30 - a2*c25*c33 - a3^2*c9*c19 - a3^2*c24*c34 - a3*c9*c20 - a3*c10*c19 - a3*c24*c35 - a3*c25*c34 - c10*c20 - c25*c35;
eqs(5) = a1^4*c7*c12 + a1^4*c22*c27 + a1^3*a2*a3*c6*c12 + a1^3*a2*a3*c7*c11 + a1^3*a2*a3*c21*c27 + a1^3*a2*a3*c22*c26 - a1^3*a2*c7^2 + a1^3*a2*c7*c13 + a1^3*a2*c8*c12 + a1^3*a2*c12^2 - a1^3*a2*c22^2 + a1^3*a2*c22*c28 + a1^3*a2*c23*c27 + a1^3*a2*c27^2 + a1^3*a3*c7*c14 + a1^3*a3*c9*c12 + a1^3*a3*c22*c29 + a1^3*a3*c24*c27 + a1^3*c7*c15 + a1^3*c10*c12 + a1^3*c12*c17 + a1^3*c22*c30 + a1^3*c25*c27 + a1^3*c27*c32 + a1^2*a2^2*a3^2*c6*c11 + a1^2*a2^2*a3^2*c21*c26 - 2*a1^2*a2^2*a3*c6*c7 + a1^2*a2^2*a3*c6*c13 + a1^2*a2^2*a3*c8*c11 + 2*a1^2*a2^2*a3*c11*c12 - 2*a1^2*a2^2*a3*c21*c22 + a1^2*a2^2*a3*c21*c28 + a1^2*a2^2*a3*c23*c26 + 2*a1^2*a2^2*a3*c26*c27 - 2*a1^2*a2^2*c7*c8 - a1^2*a2^2*c7*c12 + a1^2*a2^2*c8*c13 + 2*a1^2*a2^2*c12*c13 - 2*a1^2*a2^2*c22*c23 - a1^2*a2^2*c22*c27 + a1^2*a2^2*c23*c28 + 2*a1^2*a2^2*c27*c28 + a1^2*a2*a3^2*c6*c14 + a1^2*a2*a3^2*c9*c11 + a1^2*a2*a3^2*c21*c29 + a1^2*a2*a3^2*c24*c26 + a1^2*a2*a3*c6*c15 - 2*a1^2*a2*a3*c7*c9 + a1^2*a2*a3*c8*c14 + a1^2*a2*a3*c9*c13 + a1^2*a2*a3*c10*c11 + a1^2*a2*a3*c11*c17 + 2*a1^2*a2*a3*c12*c14 + a1^2*a2*a3*c12*c16 + a1^2*a2*a3*c21*c30 - 2*a1^2*a2*a3*c22*c24 + a1^2*a2*a3*c23*c29 + a1^2*a2*a3*c24*c28 + a1^2*a2*a3*c25*c26 + a1^2*a2*a3*c26*c32 + 2*a1^2*a2*a3*c27*c29 + a1^2*a2*a3*c27*c31 - 2*a1^2*a2*c7*c10 - a1^2*a2*c7*c17 + a1^2*a2*c8*c15 + a1^2*a2*c10*c13 + 2*a1^2*a2*c12*c15 + a1^2*a2*c12*c18 + a1^2*a2*c13*c17 - 2*a1^2*a2*c22*c25 - a1^2*a2*c22*c32 + a1^2*a2*c23*c30 + a1^2*a2*c25*c28 + 2*a1^2*a2*c27*c30 + a1^2*a2*c27*c33 + a1^2*a2*c28*c32 + a1^2*a3^2*c9*c14 + a1^2*a3^2*c24*c29 + a1^2*a3*c9*c15 + a1^2*a3*c10*c14 + a1^2*a3*c12*c19 + a1^2*a3*c14*c17 + a1^2*a3*c24*c30 + a1^2*a3*c25*c29 + a1^2*a3*c27*c34 + a1^2*a3*c29*c32 + a1^2*c10*c15 + a1^2*c12*c20 + a1^2*c15*c17 + a1^2*c25*c30 + a1^2*c27*c35 + a1^2*c30*c32 - a1*a2^3*a3^2*c6^2 + a1*a2^3*a3^2*c11^2 - a1*a2^3*a3^2*c21^2 + a1*a2^3*a3^2*c26^2 - 2*a1*a2^3*a3*c6*c8 - a1*a2^3*a3*c6*c12 - a1*a2^3*a3*c7*c11 + 2*a1*a2^3*a3*c11*c13 - 2*a1*a2^3*a3*c21*c23 - a1*a2^3*a3*c21*c27 - a1*a2^3*a3*c22*c26 + 2*a1*a2^3*a3*c26*c28 - a1*a2^3*c7*c13 - a1*a2^3*c8^2 - a1*a2^3*c8*c12 + a1*a2^3*c13^2 - a1*a2^3*c22*c28 - a1*a2^3*c23^2 - a1*a2^3*c23*c27 + a1*a2^3*c28^2 - 2*a1*a2^2*a3^2*c6*c9 + 2*a1*a2^2*a3^2*c11*c14 + a1*a2^2*a3^2*c11*c16 - 2*a1*a2^2*a3^2*c21*c24 + 2*a1*a2^2*a3^2*c26*c29 + a1*a2^2*a3^2*c26*c31 - 2*a1*a2^2*a3*c6*c10 - a1*a2^2*a3*c6*c17 - a1*a2^2*a3*c7*c14 - a1*a2^2*a3*c7*c16 - 2*a1*a2^2*a3*c8*c9 - a1*a2^2*a3*c9*c12 + 2*a1*a2^2*a3*c11*c15 + a1*a2^2*a3*c11*c18 + 2*a1*a2^2*a3*c13*c14 + a1*a2^2*a3*c13*c16 - 2*a1*a2^2*a3*c21*c25 - a1*a2^2*a3*c21*c32 - a1*a2^2*a3*c22*c29 - a1*a2^2*a3*c22*c31 - 2*a1*a2^2*a3*c23*c24 - a1*a2^2*a3*c24*c27 + 2*a1*a2^2*a3*c26*c30 + a1*a2^2*a3*c26*c33 + 2*a1*a2^2*a3*c28*c29 + a1*a2^2*a3*c28*c31 - a1*a2^2*c7*c15 - a1*a2^2*c7*c18 - 2*a1*a2^2*c8*c10 - a1*a2^2*c8*c17 - a1*a2^2*c10*c12 + 2*a1*a2^2*c13*c15 + a1*a2^2*c13*c18 - a1*a2^2*c22*c30 - a1*a2^2*c22*c33 - 2*a1*a2^2*c23*c25 - a1*a2^2*c23*c32 - a1*a2^2*c25*c27 + 2*a1*a2^2*c28*c30 + a1*a2^2*c28*c33 - a1*a2*a3^2*c9^2 + a1*a2*a3^2*c11*c19 + a1*a2*a3^2*c14^2 + a1*a2*a3^2*c14*c16 - a1*a2*a3^2*c24^2 + a1*a2*a3^2*c26*c34 + a1*a2*a3^2*c29^2 + a1*a2*a3^2*c29*c31 - a1*a2*a3*c7*c19 - 2*a1*a2*a3*c9*c10 - a1*a2*a3*c9*c17 + a1*a2*a3*c11*c20 + a1*a2*a3*c13*c19 + 2*a1*a2*a3*c14*c15 + a1*a2*a3*c14*c18 + a1*a2*a3*c15*c16 - a1*a2*a3*c22*c34 - 2*a1*a2*a3*c24*c25 - a1*a2*a3*c24*c32 + a1*a2*a3*c26*c35 + a1*a2*a3*c28*c34 + 2*a1*a2*a3*c29*c30 + a1*a2*a3*c29*c33 + a1*a2*a3*c30*c31 - a1*a2*c7*c20 - a1*a2*c10^2 - a1*a2*c10*c17 + a1*a2*c13*c20 + a1*a2*c15^2 + a1*a2*c15*c18 - a1*a2*c22*c35 - a1*a2*c25^2 - a1*a2*c25*c32 + a1*a2*c28*c35 + a1*a2*c30^2 + a1*a2*c30*c33 + a1*a3^2*c14*c19 + a1*a3^2*c29*c34 + a1*a3*c14*c20 + a1*a3*c15*c19 + a1*a3*c29*c35 + a1*a3*c30*c34 + a1*c15*c20 + a1*c30*c35 - a2^4*a3^2*c6*c11 - a2^4*a3^2*c21*c26 - a2^4*a3*c6*c13 - a2^4*a3*c8*c11 - a2^4*a3*c21*c28 - a2^4*a3*c23*c26 - a2^4*c8*c13 - a2^4*c23*c28 - a2^3*a3^2*c6*c14 - a2^3*a3^2*c6*c16 - a2^3*a3^2*c9*c11 - a2^3*a3^2*c21*c29 - a2^3*a3^2*c21*c31 - a2^3*a3^2*c24*c26 - a2^3*a3*c6*c15 - a2^3*a3*c6*c18 - a2^3*a3*c8*c14 - a2^3*a3*c8*c16 - a2^3*a3*c9*c13 - a2^3*a3*c10*c11 - a2^3*a3*c21*c30 - a2^3*a3*c21*c33 - a2^3*a3*c23*c29 - a2^3*a3*c23*c31 - a2^3*a3*c24*c28 - a2^3*a3*c25*c26 - a2^3*c8*c15 - a2^3*c8*c18 - a2^3*c10*c13 - a2^3*c23*c30 - a2^3*c23*c33 - a2^3*c25*c28 - a2^2*a3^2*c6*c19 - a2^2*a3^2*c9*c14 - a2^2*a3^2*c9*c16 - a2^2*a3^2*c21*c34 - a2^2*a3^2*c24*c29 - a2^2*a3^2*c24*c31 - a2^2*a3*c6*c20 - a2^2*a3*c8*c19 - a2^2*a3*c9*c15 - a2^2*a3*c9*c18 - a2^2*a3*c10*c14 - a2^2*a3*c10*c16 - a2^2*a3*c21*c35 - a2^2*a3*c23*c34 - a2^2*a3*c24*c30 - a2^2*a3*c24*c33 - a2^2*a3*c25*c29 - a2^2*a3*c25*c31 - a2^2*c8*c20 - a2^2*c10*c15 - a2^2*c10*c18 - a2^2*c23*c35 - a2^2*c25*c30 - a2^2*c25*c33 - a2*a3^2*c9*c19 - a2*a3^2*c24*c34 - a2*a3*c9*c20 - a2*a3*c10*c19 - a2*a3*c24*c35 - a2*a3*c25*c34 - a2*c10*c20 - a2*c25*c35;
end

%% The polynomial system
function cfg = retrieve_solver_cfg()
cfg = {};
% Number of coefficients, labelled as c1, c2, c3,...
cfg.numOfCoeff = 35;
% Number of variables, labeled as a1, a2, a3,...
cfg.numOfVars = 3;
% The index i of the selected variable, ai in the extra polynomial,
% ai - lambda.
% If set to -1, all variables will be tested one
% by one
cfg.hiddenvarnum = 3;
% (1) Either the size of polynomial combinations to be tested.
cfg.sizeofcombs = [];
% (2) Or the specific polynomial combination to be tested.
cfg.polycomb=[1;2];
% The number of rows to be GJ eliminated to obtained a reduced input
% polynomial system as an input to the generator.
cfg.noofrowstoreduce = 0;
% The heuristic size of the template. There is no theory to the best of our
% knowledge, governing the smallest template that can be generated.
% Hence one can start with a larger size and try to test by reducing the size
% of the template
cfg.heurisitictemplatesize = 41;
end