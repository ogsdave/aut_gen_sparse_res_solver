function[indicesToRemove, numOfRedCoeffMat, zeigvalindx, solverTemplate, extendedbasis, nullspacesize1, depdXcols1, nzrows1, depdCcols1, indepdCcols1, mdepdXcols1, mindepdXcols1, indepdCrows1, rowstorem1, nullspacesize2, depdXcols2, nzrows2, depdCcols2, indepdCcols2, mdepdXcols2, mindepdXcols2, indepdCrows2, rowstorem2, nullspacesize3, depdXcols3, nzrows3, depdCcols3, indepdCcols3, mdepdXcols3, mindepdXcols3, indepdCrows3, rowstorem3] = reducemonbasis(data, noofdatacoeff, foldername)
hiddenvarnumber = 2;
c1 = data(1);c2 = data(2);c3 = data(3);c4 = data(4);c5 = data(5);c6 = data(6);c7 = data(7);c8 = data(8);c9 = data(9);c10 = data(10);c11 = data(11);c12 = data(12);c13 = data(13);c14 = data(14);c15 = data(15);c16 = data(16);c17 = data(17);c18 = data(18);c19 = data(19);c20 = data(20);c21 = data(21);c22 = data(22);c23 = data(23);c24 = data(24);c25 = data(25);c26 = data(26);c27 = data(27);
t1 = -c10*c18^2+2*c12*c16*c18;
t2 = c10*c12^2-c10*c15^2+c10*c16^2-c10*c17^2+2*c11*c16*c17+2*c12*c13*c15;
t3 = c10^3+c10*c11^2+c10*c13^2-c10*c14^2+2*c11*c13*c14;
t4 = -2*c10*c18*c27+2*c12*c16*c27+2*c12*c18*c25+2*c16*c18*c21-c18^2*c19;
t5 = 2*c10*c12*c21-2*c10*c15*c24+2*c10*c16*c25-2*c10*c17*c26+2*c11*c16*c26+2*c11*c17*c25+c12^2*c19+2*c12*c13*c24+2*c12*c15*c22+2*c13*c15*c21-c15^2*c19+c16^2*c19+2*c16*c17*c20-c17^2*c19;
t6 = 3*c10^2*c19+2*c10*c11*c20+2*c10*c13*c22-2*c10*c14*c23+c11^2*c19+2*c11*c13*c23+2*c11*c14*c22+c13^2*c19+2*c13*c14*c20-c14^2*c19;
t7 = -c1*c18^2-2*c10*c18*c9+2*c12*c16*c9+2*c12*c18*c7+2*c16*c18*c3;
t8 = c1*c12^2-c1*c15^2+c1*c16^2-c1*c17^2+2*c10*c12*c3-2*c10*c15*c6+2*c10*c16*c7-2*c10*c17*c8+2*c11*c16*c8+2*c11*c17*c7+2*c12*c13*c6+2*c12*c15*c4+2*c13*c15*c3+2*c16*c17*c2;
t9 = 3*c1*c10^2+c1*c11^2+c1*c13^2-c1*c14^2+2*c10*c11*c2+2*c10*c13*c4-2*c10*c14*c5+2*c11*c13*c5+2*c11*c14*c4+2*c13*c14*c2;
t10 = -c10*c27^2+2*c12*c25*c27+2*c16*c21*c27-2*c18*c19*c27+2*c18*c21*c25;
t11 = c10*c21^2-c10*c24^2+c10*c25^2-c10*c26^2+2*c11*c25*c26+2*c12*c19*c21+2*c12*c22*c24+2*c13*c21*c24-2*c15*c19*c24+2*c15*c21*c22+2*c16*c19*c25+2*c16*c20*c26-2*c17*c19*c26+2*c17*c20*c25;
t12 = 3*c10*c19^2+c10*c20^2+c10*c22^2-c10*c23^2+2*c11*c19*c20+2*c11*c22*c23+2*c13*c19*c22+2*c13*c20*c23-2*c14*c19*c23+2*c14*c20*c22;
t13 = -2*c1*c18*c27-2*c10*c27*c9+2*c12*c25*c9+2*c12*c27*c7+2*c16*c21*c9+2*c16*c27*c3-2*c18*c19*c9+2*c18*c21*c7+2*c18*c25*c3;
t14 = 2*c1*c12*c21-2*c1*c15*c24+2*c1*c16*c25-2*c1*c17*c26+2*c10*c21*c3-2*c10*c24*c6+2*c10*c25*c7-2*c10*c26*c8+2*c11*c25*c8+2*c11*c26*c7+2*c12*c19*c3+2*c12*c22*c6+2*c12*c24*c4+2*c13*c21*c6+2*c13*c24*c3-2*c15*c19*c6+2*c15*c21*c4+2*c15*c22*c3+2*c16*c19*c7+2*c16*c2*c26+2*c16*c20*c8-2*c17*c19*c8+2*c17*c2*c25+2*c17*c20*c7;
t15 = 6*c1*c10*c19+2*c1*c11*c20+2*c1*c13*c22-2*c1*c14*c23+2*c10*c2*c20+2*c10*c22*c4-2*c10*c23*c5+2*c11*c19*c2+2*c11*c22*c5+2*c11*c23*c4+2*c13*c19*c4+2*c13*c2*c23+2*c13*c20*c5-2*c14*c19*c5+2*c14*c2*c22+2*c14*c20*c4;
t16 = -2*c1*c18*c9-c10*c9^2+2*c12*c7*c9+2*c16*c3*c9+2*c18*c3*c7;
t17 = 2*c1*c12*c3-2*c1*c15*c6+2*c1*c16*c7-2*c1*c17*c8+c10*c3^2-c10*c6^2+c10*c7^2-c10*c8^2+2*c11*c7*c8+2*c12*c4*c6+2*c13*c3*c6+2*c15*c3*c4+2*c16*c2*c8+2*c17*c2*c7;
t18 = 3*c1^2*c10+2*c1*c11*c2+2*c1*c13*c4-2*c1*c14*c5+c10*c2^2+c10*c4^2-c10*c5^2+2*c11*c4*c5+2*c13*c2*c5+2*c14*c2*c4;
t19 = -c19*c27^2+2*c21*c25*c27;
t20 = c19*c21^2-c19*c24^2+c19*c25^2-c19*c26^2+2*c20*c25*c26+2*c21*c22*c24;
t21 = c19^3+c19*c20^2+c19*c22^2-c19*c23^2+2*c20*c22*c23;
t22 = -c1*c27^2-2*c19*c27*c9+2*c21*c25*c9+2*c21*c27*c7+2*c25*c27*c3;
t23 = c1*c21^2-c1*c24^2+c1*c25^2-c1*c26^2+2*c19*c21*c3-2*c19*c24*c6+2*c19*c25*c7-2*c19*c26*c8+2*c2*c25*c26+2*c20*c25*c8+2*c20*c26*c7+2*c21*c22*c6+2*c21*c24*c4+2*c22*c24*c3;
t24 = 3*c1*c19^2+c1*c20^2+c1*c22^2-c1*c23^2+2*c19*c2*c20+2*c19*c22*c4-2*c19*c23*c5+2*c2*c22*c23+2*c20*c22*c5+2*c20*c23*c4;
t25 = -2*c1*c27*c9-c19*c9^2+2*c21*c7*c9+2*c25*c3*c9+2*c27*c3*c7;
t26 = 2*c1*c21*c3-2*c1*c24*c6+2*c1*c25*c7-2*c1*c26*c8+c19*c3^2-c19*c6^2+c19*c7^2-c19*c8^2+2*c2*c25*c8+2*c2*c26*c7+2*c20*c7*c8+2*c21*c4*c6+2*c22*c3*c6+2*c24*c3*c4;
t27 = 3*c1^2*c19+2*c1*c2*c20+2*c1*c22*c4-2*c1*c23*c5+c19*c2^2+c19*c4^2-c19*c5^2+2*c2*c22*c5+2*c2*c23*c4+2*c20*c4*c5;
t28 = -c1*c9^2+2*c3*c7*c9;
t29 = c1*c3^2-c1*c6^2+c1*c7^2-c1*c8^2+2*c2*c7*c8+2*c3*c4*c6;
t30 = c1^3+c1*c2^2+c1*c4^2-c1*c5^2+2*c2*c4*c5;
t31 = -c11*c18^2+2*c12*c17*c18;
t32 = 2*c10*c16*c17+c11*c12^2-c11*c15^2-c11*c16^2+c11*c17^2+2*c12*c14*c15;
t33 = c10^2*c11+2*c10*c13*c14+c11^3-c11*c13^2+c11*c14^2;
t34 = -2*c11*c18*c27+2*c12*c17*c27+2*c12*c18*c26+2*c17*c18*c21-c18^2*c20;
t35 = 2*c10*c16*c26+2*c10*c17*c25+2*c11*c12*c21-2*c11*c15*c24-2*c11*c16*c25+2*c11*c17*c26+c12^2*c20+2*c12*c14*c24+2*c12*c15*c23+2*c14*c15*c21-c15^2*c20-c16^2*c20+2*c16*c17*c19+c17^2*c20;
t36 = c10^2*c20+2*c10*c11*c19+2*c10*c13*c23+2*c10*c14*c22+3*c11^2*c20-2*c11*c13*c22+2*c11*c14*c23-c13^2*c20+2*c13*c14*c19+c14^2*c20;
t37 = -2*c11*c18*c9+2*c12*c17*c9+2*c12*c18*c8+2*c17*c18*c3-c18^2*c2;
t38 = 2*c1*c16*c17+2*c10*c16*c8+2*c10*c17*c7+2*c11*c12*c3-2*c11*c15*c6-2*c11*c16*c7+2*c11*c17*c8+c12^2*c2+2*c12*c14*c6+2*c12*c15*c5+2*c14*c15*c3-c15^2*c2-c16^2*c2+c17^2*c2;
t39 = 2*c1*c10*c11+2*c1*c13*c14+c10^2*c2+2*c10*c13*c5+2*c10*c14*c4+3*c11^2*c2-2*c11*c13*c4+2*c11*c14*c5-c13^2*c2+c14^2*c2;
t40 = -c11*c27^2+2*c12*c26*c27+2*c17*c21*c27-2*c18*c20*c27+2*c18*c21*c26;
t41 = 2*c10*c25*c26+c11*c21^2-c11*c24^2-c11*c25^2+c11*c26^2+2*c12*c20*c21+2*c12*c23*c24+2*c14*c21*c24-2*c15*c20*c24+2*c15*c21*c23+2*c16*c19*c26-2*c16*c20*c25+2*c17*c19*c25+2*c17*c20*c26;
t42 = 2*c10*c19*c20+2*c10*c22*c23+c11*c19^2+3*c11*c20^2-c11*c22^2+c11*c23^2+2*c13*c19*c23-2*c13*c20*c22+2*c14*c19*c22+2*c14*c20*c23;
t43 = -2*c11*c27*c9+2*c12*c26*c9+2*c12*c27*c8+2*c17*c21*c9+2*c17*c27*c3-2*c18*c2*c27-2*c18*c20*c9+2*c18*c21*c8+2*c18*c26*c3;
t44 = 2*c1*c16*c26+2*c1*c17*c25+2*c10*c25*c8+2*c10*c26*c7+2*c11*c21*c3-2*c11*c24*c6-2*c11*c25*c7+2*c11*c26*c8+2*c12*c2*c21+2*c12*c20*c3+2*c12*c23*c6+2*c12*c24*c5+2*c14*c21*c6+2*c14*c24*c3-2*c15*c2*c24-2*c15*c20*c6+2*c15*c21*c5+2*c15*c23*c3+2*c16*c19*c8-2*c16*c2*c25-2*c16*c20*c7+2*c17*c19*c7+2*c17*c2*c26+2*c17*c20*c8;
t45 = 2*c1*c10*c20+2*c1*c11*c19+2*c1*c13*c23+2*c1*c14*c22+2*c10*c19*c2+2*c10*c22*c5+2*c10*c23*c4+6*c11*c2*c20-2*c11*c22*c4+2*c11*c23*c5+2*c13*c19*c5-2*c13*c2*c22-2*c13*c20*c4+2*c14*c19*c4+2*c14*c2*c23+2*c14*c20*c5;
t46 = -c11*c9^2+2*c12*c8*c9+2*c17*c3*c9-2*c18*c2*c9+2*c18*c3*c8;
t47 = 2*c1*c16*c8+2*c1*c17*c7+2*c10*c7*c8+c11*c3^2-c11*c6^2-c11*c7^2+c11*c8^2+2*c12*c2*c3+2*c12*c5*c6+2*c14*c3*c6-2*c15*c2*c6+2*c15*c3*c5-2*c16*c2*c7+2*c17*c2*c8;
t48 = c1^2*c11+2*c1*c10*c2+2*c1*c13*c5+2*c1*c14*c4+2*c10*c4*c5+3*c11*c2^2-c11*c4^2+c11*c5^2-2*c13*c2*c4+2*c14*c2*c5;
t49 = -c20*c27^2+2*c21*c26*c27;
t50 = 2*c19*c25*c26+c20*c21^2-c20*c24^2-c20*c25^2+c20*c26^2+2*c21*c23*c24;
t51 = c19^2*c20+2*c19*c22*c23+c20^3-c20*c22^2+c20*c23^2;
t52 = -c2*c27^2-2*c20*c27*c9+2*c21*c26*c9+2*c21*c27*c8+2*c26*c27*c3;
t53 = 2*c1*c25*c26+2*c19*c25*c8+2*c19*c26*c7+c2*c21^2-c2*c24^2-c2*c25^2+c2*c26^2+2*c20*c21*c3-2*c20*c24*c6-2*c20*c25*c7+2*c20*c26*c8+2*c21*c23*c6+2*c21*c24*c5+2*c23*c24*c3;
t54 = 2*c1*c19*c20+2*c1*c22*c23+c19^2*c2+2*c19*c22*c5+2*c19*c23*c4+3*c2*c20^2-c2*c22^2+c2*c23^2-2*c20*c22*c4+2*c20*c23*c5;
t55 = -2*c2*c27*c9-c20*c9^2+2*c21*c8*c9+2*c26*c3*c9+2*c27*c3*c8;
t56 = 2*c1*c25*c8+2*c1*c26*c7+2*c19*c7*c8+2*c2*c21*c3-2*c2*c24*c6-2*c2*c25*c7+2*c2*c26*c8+c20*c3^2-c20*c6^2-c20*c7^2+c20*c8^2+2*c21*c5*c6+2*c23*c3*c6+2*c24*c3*c5;
t57 = c1^2*c20+2*c1*c19*c2+2*c1*c22*c5+2*c1*c23*c4+2*c19*c4*c5+3*c2^2*c20-2*c2*c22*c4+2*c2*c23*c5-c20*c4^2+c20*c5^2;
t58 = -c2*c9^2+2*c3*c8*c9;
t59 = 2*c1*c7*c8+c2*c3^2-c2*c6^2-c2*c7^2+c2*c8^2+2*c3*c5*c6;
t60 = c1^2*c2+2*c1*c4*c5+c2^3-c2*c4^2+c2*c5^2;
t61 = c12*c18^2;
t62 = 2*c10*c16*c18+2*c11*c17*c18+c12^3+c12*c15^2-c12*c16^2-c12*c17^2;
t63 = c10^2*c12+2*c10*c13*c15+c11^2*c12+2*c11*c14*c15-c12*c13^2-c12*c14^2;
t64 = 2*c12*c18*c27+c18^2*c21;
t65 = 2*c10*c16*c27+2*c10*c18*c25+2*c11*c17*c27+2*c11*c18*c26+3*c12^2*c21+2*c12*c15*c24-2*c12*c16*c25-2*c12*c17*c26+c15^2*c21-c16^2*c21+2*c16*c18*c19-c17^2*c21+2*c17*c18*c20;
t66 = c10^2*c21+2*c10*c12*c19+2*c10*c13*c24+2*c10*c15*c22+c11^2*c21+2*c11*c12*c20+2*c11*c14*c24+2*c11*c15*c23-2*c12*c13*c22-2*c12*c14*c23-c13^2*c21+2*c13*c15*c19-c14^2*c21+2*c14*c15*c20;
t67 = 2*c12*c18*c9+c18^2*c3;
t68 = 2*c1*c16*c18+2*c10*c16*c9+2*c10*c18*c7+2*c11*c17*c9+2*c11*c18*c8+3*c12^2*c3+2*c12*c15*c6-2*c12*c16*c7-2*c12*c17*c8+c15^2*c3-c16^2*c3-c17^2*c3+2*c17*c18*c2;
t69 = 2*c1*c10*c12+2*c1*c13*c15+c10^2*c3+2*c10*c13*c6+2*c10*c15*c4+c11^2*c3+2*c11*c12*c2+2*c11*c14*c6+2*c11*c15*c5-2*c12*c13*c4-2*c12*c14*c5-c13^2*c3-c14^2*c3+2*c14*c15*c2;
t70 = c12*c27^2+2*c18*c21*c27;
t71 = 2*c10*c25*c27+2*c11*c26*c27+3*c12*c21^2+c12*c24^2-c12*c25^2-c12*c26^2+2*c15*c21*c24+2*c16*c19*c27-2*c16*c21*c25+2*c17*c20*c27-2*c17*c21*c26+2*c18*c19*c25+2*c18*c20*c26;
t72 = 2*c10*c19*c21+2*c10*c22*c24+2*c11*c20*c21+2*c11*c23*c24+c12*c19^2+c12*c20^2-c12*c22^2-c12*c23^2+2*c13*c19*c24-2*c13*c21*c22+2*c14*c20*c24-2*c14*c21*c23+2*c15*c19*c22+2*c15*c20*c23;
t73 = 2*c12*c27*c9+2*c18*c21*c9+2*c18*c27*c3;
t74 = 2*c1*c16*c27+2*c1*c18*c25+2*c10*c25*c9+2*c10*c27*c7+2*c11*c26*c9+2*c11*c27*c8+6*c12*c21*c3+2*c12*c24*c6-2*c12*c25*c7-2*c12*c26*c8+2*c15*c21*c6+2*c15*c24*c3+2*c16*c19*c9-2*c16*c21*c7-2*c16*c25*c3+2*c17*c2*c27+2*c17*c20*c9-2*c17*c21*c8-2*c17*c26*c3+2*c18*c19*c7+2*c18*c2*c26+2*c18*c20*c8;
t75 = 2*c1*c10*c21+2*c1*c12*c19+2*c1*c13*c24+2*c1*c15*c22+2*c10*c19*c3+2*c10*c22*c6+2*c10*c24*c4+2*c11*c2*c21+2*c11*c20*c3+2*c11*c23*c6+2*c11*c24*c5+2*c12*c2*c20-2*c12*c22*c4-2*c12*c23*c5+2*c13*c19*c6-2*c13*c21*c4-2*c13*c22*c3+2*c14*c2*c24+2*c14*c20*c6-2*c14*c21*c5-2*c14*c23*c3+2*c15*c19*c4+2*c15*c2*c23+2*c15*c20*c5;
t76 = c12*c9^2+2*c18*c3*c9;
t77 = 2*c1*c16*c9+2*c1*c18*c7+2*c10*c7*c9+2*c11*c8*c9+3*c12*c3^2+c12*c6^2-c12*c7^2-c12*c8^2+2*c15*c3*c6-2*c16*c3*c7+2*c17*c2*c9-2*c17*c3*c8+2*c18*c2*c8;
t78 = c1^2*c12+2*c1*c10*c3+2*c1*c13*c6+2*c1*c15*c4+2*c10*c4*c6+2*c11*c2*c3+2*c11*c5*c6+c12*c2^2-c12*c4^2-c12*c5^2-2*c13*c3*c4+2*c14*c2*c6-2*c14*c3*c5+2*c15*c2*c5;
t79 = c21*c27^2;
t80 = 2*c19*c25*c27+2*c20*c26*c27+c21^3+c21*c24^2-c21*c25^2-c21*c26^2;
t81 = c19^2*c21+2*c19*c22*c24+c20^2*c21+2*c20*c23*c24-c21*c22^2-c21*c23^2;
t82 = 2*c21*c27*c9+c27^2*c3;
t83 = 2*c1*c25*c27+2*c19*c25*c9+2*c19*c27*c7+2*c2*c26*c27+2*c20*c26*c9+2*c20*c27*c8+3*c21^2*c3+2*c21*c24*c6-2*c21*c25*c7-2*c21*c26*c8+c24^2*c3-c25^2*c3-c26^2*c3;
t84 = 2*c1*c19*c21+2*c1*c22*c24+c19^2*c3+2*c19*c22*c6+2*c19*c24*c4+2*c2*c20*c21+2*c2*c23*c24+c20^2*c3+2*c20*c23*c6+2*c20*c24*c5-2*c21*c22*c4-2*c21*c23*c5-c22^2*c3-c23^2*c3;
t85 = c21*c9^2+2*c27*c3*c9;
t86 = 2*c1*c25*c9+2*c1*c27*c7+2*c19*c7*c9+2*c2*c26*c9+2*c2*c27*c8+2*c20*c8*c9+3*c21*c3^2+c21*c6^2-c21*c7^2-c21*c8^2+2*c24*c3*c6-2*c25*c3*c7-2*c26*c3*c8;
t87 = c1^2*c21+2*c1*c19*c3+2*c1*c22*c6+2*c1*c24*c4+2*c19*c4*c6+c2^2*c21+2*c2*c20*c3+2*c2*c23*c6+2*c2*c24*c5+2*c20*c5*c6-c21*c4^2-c21*c5^2-2*c22*c3*c4-2*c23*c3*c5;
t88 = c3*c9^2;
t89 = 2*c1*c7*c9+2*c2*c8*c9+c3^3+c3*c6^2-c3*c7^2-c3*c8^2;
t90 = c1^2*c3+2*c1*c4*c6+c2^2*c3+2*c2*c5*c6-c3*c4^2-c3*c5^2;
t91 = -c13*c18^2+2*c15*c16*c18;
t92 = 2*c10*c12*c15-c12^2*c13+c13*c15^2+c13*c16^2-c13*c17^2+2*c14*c16*c17;
t93 = c10^2*c13+2*c10*c11*c14-c11^2*c13+c13^3+c13*c14^2;
t94 = -2*c13*c18*c27+2*c15*c16*c27+2*c15*c18*c25+2*c16*c18*c24-c18^2*c22;
t95 = 2*c10*c12*c24+2*c10*c15*c21-c12^2*c22-2*c12*c13*c21+2*c12*c15*c19+2*c13*c15*c24+2*c13*c16*c25-2*c13*c17*c26+2*c14*c16*c26+2*c14*c17*c25+c15^2*c22+c16^2*c22+2*c16*c17*c23-c17^2*c22;
t96 = c10^2*c22+2*c10*c11*c23+2*c10*c13*c19+2*c10*c14*c20-c11^2*c22-2*c11*c13*c20+2*c11*c14*c19+3*c13^2*c22+2*c13*c14*c23+c14^2*c22;
t97 = -2*c13*c18*c9+2*c15*c16*c9+2*c15*c18*c7+2*c16*c18*c6-c18^2*c4;
t98 = 2*c1*c12*c15+2*c10*c12*c6+2*c10*c15*c3-c12^2*c4-2*c12*c13*c3+2*c13*c15*c6+2*c13*c16*c7-2*c13*c17*c8+2*c14*c16*c8+2*c14*c17*c7+c15^2*c4+c16^2*c4+2*c16*c17*c5-c17^2*c4;
t99 = 2*c1*c10*c13+2*c1*c11*c14+c10^2*c4+2*c10*c11*c5+2*c10*c14*c2-c11^2*c4-2*c11*c13*c2+3*c13^2*c4+2*c13*c14*c5+c14^2*c4;
t100 = -c13*c27^2+2*c15*c25*c27+2*c16*c24*c27-2*c18*c22*c27+2*c18*c24*c25;
t101 = 2*c10*c21*c24+2*c12*c19*c24-2*c12*c21*c22-c13*c21^2+c13*c24^2+c13*c25^2-c13*c26^2+2*c14*c25*c26+2*c15*c19*c21+2*c15*c22*c24+2*c16*c22*c25+2*c16*c23*c26-2*c17*c22*c26+2*c17*c23*c25;
t102 = 2*c10*c19*c22+2*c10*c20*c23+2*c11*c19*c23-2*c11*c20*c22+c13*c19^2-c13*c20^2+3*c13*c22^2+c13*c23^2+2*c14*c19*c20+2*c14*c22*c23;
t103 = -2*c13*c27*c9+2*c15*c25*c9+2*c15*c27*c7+2*c16*c24*c9+2*c16*c27*c6-2*c18*c22*c9+2*c18*c24*c7+2*c18*c25*c6-2*c18*c27*c4;
t104 = 2*c1*c12*c24+2*c1*c15*c21+2*c10*c21*c6+2*c10*c24*c3+2*c12*c19*c6-2*c12*c21*c4-2*c12*c22*c3-2*c13*c21*c3+2*c13*c24*c6+2*c13*c25*c7-2*c13*c26*c8+2*c14*c25*c8+2*c14*c26*c7+2*c15*c19*c3+2*c15*c22*c6+2*c15*c24*c4+2*c16*c22*c7+2*c16*c23*c8+2*c16*c25*c4+2*c16*c26*c5-2*c17*c22*c8+2*c17*c23*c7+2*c17*c25*c5-2*c17*c26*c4;
t105 = 2*c1*c10*c22+2*c1*c11*c23+2*c1*c13*c19+2*c1*c14*c20+2*c10*c19*c4+2*c10*c2*c23+2*c10*c20*c5+2*c11*c19*c5-2*c11*c2*c22-2*c11*c20*c4-2*c13*c2*c20+6*c13*c22*c4+2*c13*c23*c5+2*c14*c19*c2+2*c14*c22*c5+2*c14*c23*c4;
t106 = -c13*c9^2+2*c15*c7*c9+2*c16*c6*c9-2*c18*c4*c9+2*c18*c6*c7;
t107 = 2*c1*c12*c6+2*c1*c15*c3+2*c10*c3*c6-2*c12*c3*c4-c13*c3^2+c13*c6^2+c13*c7^2-c13*c8^2+2*c14*c7*c8+2*c15*c4*c6+2*c16*c4*c7+2*c16*c5*c8-2*c17*c4*c8+2*c17*c5*c7;
t108 = c1^2*c13+2*c1*c10*c4+2*c1*c11*c5+2*c1*c14*c2+2*c10*c2*c5-2*c11*c2*c4-c13*c2^2+3*c13*c4^2+c13*c5^2+2*c14*c4*c5;
t109 = -c22*c27^2+2*c24*c25*c27;
t110 = 2*c19*c21*c24-c21^2*c22+c22*c24^2+c22*c25^2-c22*c26^2+2*c23*c25*c26;
t111 = c19^2*c22+2*c19*c20*c23-c20^2*c22+c22^3+c22*c23^2;
t112 = -2*c22*c27*c9+2*c24*c25*c9+2*c24*c27*c7+2*c25*c27*c6-c27^2*c4;
t113 = 2*c1*c21*c24+2*c19*c21*c6+2*c19*c24*c3-c21^2*c4-2*c21*c22*c3+2*c22*c24*c6+2*c22*c25*c7-2*c22*c26*c8+2*c23*c25*c8+2*c23*c26*c7+c24^2*c4+c25^2*c4+2*c25*c26*c5-c26^2*c4;
t114 = 2*c1*c19*c22+2*c1*c20*c23+c19^2*c4+2*c19*c2*c23+2*c19*c20*c5-2*c2*c20*c22-c20^2*c4+3*c22^2*c4+2*c22*c23*c5+c23^2*c4;
t115 = -c22*c9^2+2*c24*c7*c9+2*c25*c6*c9-2*c27*c4*c9+2*c27*c6*c7;
t116 = 2*c1*c21*c6+2*c1*c24*c3+2*c19*c3*c6-2*c21*c3*c4-c22*c3^2+c22*c6^2+c22*c7^2-c22*c8^2+2*c23*c7*c8+2*c24*c4*c6+2*c25*c4*c7+2*c25*c5*c8-2*c26*c4*c8+2*c26*c5*c7;
t117 = c1^2*c22+2*c1*c19*c4+2*c1*c2*c23+2*c1*c20*c5+2*c19*c2*c5-c2^2*c22-2*c2*c20*c4+3*c22*c4^2+c22*c5^2+2*c23*c4*c5;
t118 = -c4*c9^2+2*c6*c7*c9;
t119 = 2*c1*c3*c6-c3^2*c4+c4*c6^2+c4*c7^2-c4*c8^2+2*c5*c7*c8;
t120 = c1^2*c4+2*c1*c2*c5-c2^2*c4+c4^3+c4*c5^2;
t121 = -c14*c18^2+2*c15*c17*c18;
t122 = 2*c11*c12*c15-c12^2*c14+2*c13*c16*c17+c14*c15^2-c14*c16^2+c14*c17^2;
t123 = -c10^2*c14+2*c10*c11*c13+c11^2*c14+c13^2*c14+c14^3;
t124 = -2*c14*c18*c27+2*c15*c17*c27+2*c15*c18*c26+2*c17*c18*c24-c18^2*c23;
t125 = 2*c11*c12*c24+2*c11*c15*c21-c12^2*c23-2*c12*c14*c21+2*c12*c15*c20+2*c13*c16*c26+2*c13*c17*c25+2*c14*c15*c24-2*c14*c16*c25+2*c14*c17*c26+c15^2*c23-c16^2*c23+2*c16*c17*c22+c17^2*c23;
t126 = -c10^2*c23+2*c10*c11*c22+2*c10*c13*c20-2*c10*c14*c19+c11^2*c23+2*c11*c13*c19+2*c11*c14*c20+c13^2*c23+2*c13*c14*c22+3*c14^2*c23;
t127 = -2*c14*c18*c9+2*c15*c17*c9+2*c15*c18*c8+2*c17*c18*c6-c18^2*c5;
t128 = 2*c11*c12*c6+2*c11*c15*c3-c12^2*c5-2*c12*c14*c3+2*c12*c15*c2+2*c13*c16*c8+2*c13*c17*c7+2*c14*c15*c6-2*c14*c16*c7+2*c14*c17*c8+c15^2*c5-c16^2*c5+2*c16*c17*c4+c17^2*c5;
t129 = -2*c1*c10*c14+2*c1*c11*c13-c10^2*c5+2*c10*c11*c4+2*c10*c13*c2+c11^2*c5+2*c11*c14*c2+c13^2*c5+2*c13*c14*c4+3*c14^2*c5;
t130 = -c14*c27^2+2*c15*c26*c27+2*c17*c24*c27-2*c18*c23*c27+2*c18*c24*c26;
t131 = 2*c11*c21*c24+2*c12*c20*c24-2*c12*c21*c23+2*c13*c25*c26-c14*c21^2+c14*c24^2-c14*c25^2+c14*c26^2+2*c15*c20*c21+2*c15*c23*c24+2*c16*c22*c26-2*c16*c23*c25+2*c17*c22*c25+2*c17*c23*c26;
t132 = -2*c10*c19*c23+2*c10*c20*c22+2*c11*c19*c22+2*c11*c20*c23+2*c13*c19*c20+2*c13*c22*c23-c14*c19^2+c14*c20^2+c14*c22^2+3*c14*c23^2;
t133 = -2*c14*c27*c9+2*c15*c26*c9+2*c15*c27*c8+2*c17*c24*c9+2*c17*c27*c6-2*c18*c23*c9+2*c18*c24*c8+2*c18*c26*c6-2*c18*c27*c5;
t134 = 2*c11*c21*c6+2*c11*c24*c3+2*c12*c2*c24+2*c12*c20*c6-2*c12*c21*c5-2*c12*c23*c3+2*c13*c25*c8+2*c13*c26*c7-2*c14*c21*c3+2*c14*c24*c6-2*c14*c25*c7+2*c14*c26*c8+2*c15*c2*c21+2*c15*c20*c3+2*c15*c23*c6+2*c15*c24*c5+2*c16*c22*c8-2*c16*c23*c7-2*c16*c25*c5+2*c16*c26*c4+2*c17*c22*c7+2*c17*c23*c8+2*c17*c25*c4+2*c17*c26*c5;
t135 = -2*c1*c10*c23+2*c1*c11*c22+2*c1*c13*c20-2*c1*c14*c19-2*c10*c19*c5+2*c10*c2*c22+2*c10*c20*c4+2*c11*c19*c4+2*c11*c2*c23+2*c11*c20*c5+2*c13*c19*c2+2*c13*c22*c5+2*c13*c23*c4+2*c14*c2*c20+2*c14*c22*c4+6*c14*c23*c5;
t136 = -c14*c9^2+2*c15*c8*c9+2*c17*c6*c9-2*c18*c5*c9+2*c18*c6*c8;
t137 = 2*c11*c3*c6+2*c12*c2*c6-2*c12*c3*c5+2*c13*c7*c8-c14*c3^2+c14*c6^2-c14*c7^2+c14*c8^2+2*c15*c2*c3+2*c15*c5*c6+2*c16*c4*c8-2*c16*c5*c7+2*c17*c4*c7+2*c17*c5*c8;
t138 = -c1^2*c14-2*c1*c10*c5+2*c1*c11*c4+2*c1*c13*c2+2*c10*c2*c4+2*c11*c2*c5+2*c13*c4*c5+c14*c2^2+c14*c4^2+3*c14*c5^2;
t139 = -c23*c27^2+2*c24*c26*c27;
t140 = 2*c20*c21*c24-c21^2*c23+2*c22*c25*c26+c23*c24^2-c23*c25^2+c23*c26^2;
t141 = -c19^2*c23+2*c19*c20*c22+c20^2*c23+c22^2*c23+c23^3;
t142 = -2*c23*c27*c9+2*c24*c26*c9+2*c24*c27*c8+2*c26*c27*c6-c27^2*c5;
t143 = 2*c2*c21*c24+2*c20*c21*c6+2*c20*c24*c3-c21^2*c5-2*c21*c23*c3+2*c22*c25*c8+2*c22*c26*c7+2*c23*c24*c6-2*c23*c25*c7+2*c23*c26*c8+c24^2*c5-c25^2*c5+2*c25*c26*c4+c26^2*c5;
t144 = -2*c1*c19*c23+2*c1*c20*c22-c19^2*c5+2*c19*c2*c22+2*c19*c20*c4+2*c2*c20*c23+c20^2*c5+c22^2*c5+2*c22*c23*c4+3*c23^2*c5;
t145 = -c23*c9^2+2*c24*c8*c9+2*c26*c6*c9-2*c27*c5*c9+2*c27*c6*c8;
t146 = 2*c2*c21*c6+2*c2*c24*c3+2*c20*c3*c6-2*c21*c3*c5+2*c22*c7*c8-c23*c3^2+c23*c6^2-c23*c7^2+c23*c8^2+2*c24*c5*c6+2*c25*c4*c8-2*c25*c5*c7+2*c26*c4*c7+2*c26*c5*c8;
t147 = -c1^2*c23-2*c1*c19*c5+2*c1*c2*c22+2*c1*c20*c4+2*c19*c2*c4+c2^2*c23+2*c2*c20*c5+2*c22*c4*c5+c23*c4^2+3*c23*c5^2;
t148 = -c5*c9^2+2*c6*c8*c9;
t149 = 2*c2*c3*c6-c3^2*c5+2*c4*c7*c8+c5*c6^2-c5*c7^2+c5*c8^2;
t150 = -c1^2*c5+2*c1*c2*c4+c2^2*c5+c4^2*c5+c5^3;
t151 = c15*c18^2;
t152 = c12^2*c15+2*c13*c16*c18+2*c14*c17*c18+c15^3-c15*c16^2-c15*c17^2;
t153 = -c10^2*c15+2*c10*c12*c13-c11^2*c15+2*c11*c12*c14+c13^2*c15+c14^2*c15;
t154 = 2*c15*c18*c27+c18^2*c24;
t155 = c12^2*c24+2*c12*c15*c21+2*c13*c16*c27+2*c13*c18*c25+2*c14*c17*c27+2*c14*c18*c26+3*c15^2*c24-2*c15*c16*c25-2*c15*c17*c26-c16^2*c24+2*c16*c18*c22-c17^2*c24+2*c17*c18*c23;
t156 = -c10^2*c24+2*c10*c12*c22+2*c10*c13*c21-2*c10*c15*c19-c11^2*c24+2*c11*c12*c23+2*c11*c14*c21-2*c11*c15*c20+2*c12*c13*c19+2*c12*c14*c20+c13^2*c24+2*c13*c15*c22+c14^2*c24+2*c14*c15*c23;
t157 = 2*c15*c18*c9+c18^2*c6;
t158 = c12^2*c6+2*c12*c15*c3+2*c13*c16*c9+2*c13*c18*c7+2*c14*c17*c9+2*c14*c18*c8+3*c15^2*c6-2*c15*c16*c7-2*c15*c17*c8-c16^2*c6+2*c16*c18*c4-c17^2*c6+2*c17*c18*c5;
t159 = -2*c1*c10*c15+2*c1*c12*c13-c10^2*c6+2*c10*c12*c4+2*c10*c13*c3-c11^2*c6+2*c11*c12*c5+2*c11*c14*c3-2*c11*c15*c2+2*c12*c14*c2+c13^2*c6+2*c13*c15*c4+c14^2*c6+2*c14*c15*c5;
t160 = c15*c27^2+2*c18*c24*c27;
t161 = 2*c12*c21*c24+2*c13*c25*c27+2*c14*c26*c27+c15*c21^2+3*c15*c24^2-c15*c25^2-c15*c26^2+2*c16*c22*c27-2*c16*c24*c25+2*c17*c23*c27-2*c17*c24*c26+2*c18*c22*c25+2*c18*c23*c26;
t162 = -2*c10*c19*c24+2*c10*c21*c22-2*c11*c20*c24+2*c11*c21*c23+2*c12*c19*c22+2*c12*c20*c23+2*c13*c19*c21+2*c13*c22*c24+2*c14*c20*c21+2*c14*c23*c24-c15*c19^2-c15*c20^2+c15*c22^2+c15*c23^2;
t163 = 2*c15*c27*c9+2*c18*c24*c9+2*c18*c27*c6;
t164 = 2*c12*c21*c6+2*c12*c24*c3+2*c13*c25*c9+2*c13*c27*c7+2*c14*c26*c9+2*c14*c27*c8+2*c15*c21*c3+6*c15*c24*c6-2*c15*c25*c7-2*c15*c26*c8+2*c16*c22*c9-2*c16*c24*c7-2*c16*c25*c6+2*c16*c27*c4+2*c17*c23*c9-2*c17*c24*c8-2*c17*c26*c6+2*c17*c27*c5+2*c18*c22*c7+2*c18*c23*c8+2*c18*c25*c4+2*c18*c26*c5;
t165 = -2*c1*c10*c24+2*c1*c12*c22+2*c1*c13*c21-2*c1*c15*c19-2*c10*c19*c6+2*c10*c21*c4+2*c10*c22*c3-2*c11*c2*c24-2*c11*c20*c6+2*c11*c21*c5+2*c11*c23*c3+2*c12*c19*c4+2*c12*c2*c23+2*c12*c20*c5+2*c13*c19*c3+2*c13*c22*c6+2*c13*c24*c4+2*c14*c2*c21+2*c14*c20*c3+2*c14*c23*c6+2*c14*c24*c5-2*c15*c2*c20+2*c15*c22*c4+2*c15*c23*c5;
t166 = c15*c9^2+2*c18*c6*c9;
t167 = 2*c12*c3*c6+2*c13*c7*c9+2*c14*c8*c9+c15*c3^2+3*c15*c6^2-c15*c7^2-c15*c8^2+2*c16*c4*c9-2*c16*c6*c7+2*c17*c5*c9-2*c17*c6*c8+2*c18*c4*c7+2*c18*c5*c8;
t168 = -c1^2*c15-2*c1*c10*c6+2*c1*c12*c4+2*c1*c13*c3+2*c10*c3*c4-2*c11*c2*c6+2*c11*c3*c5+2*c12*c2*c5+2*c13*c4*c6+2*c14*c2*c3+2*c14*c5*c6-c15*c2^2+c15*c4^2+c15*c5^2;
t169 = c24*c27^2;
t170 = c21^2*c24+2*c22*c25*c27+2*c23*c26*c27+c24^3-c24*c25^2-c24*c26^2;
t171 = -c19^2*c24+2*c19*c21*c22-c20^2*c24+2*c20*c21*c23+c22^2*c24+c23^2*c24;
t172 = 2*c24*c27*c9+c27^2*c6;
t173 = c21^2*c6+2*c21*c24*c3+2*c22*c25*c9+2*c22*c27*c7+2*c23*c26*c9+2*c23*c27*c8+3*c24^2*c6-2*c24*c25*c7-2*c24*c26*c8-c25^2*c6+2*c25*c27*c4-c26^2*c6+2*c26*c27*c5;
t174 = -2*c1*c19*c24+2*c1*c21*c22-c19^2*c6+2*c19*c21*c4+2*c19*c22*c3-2*c2*c20*c24+2*c2*c21*c23-c20^2*c6+2*c20*c21*c5+2*c20*c23*c3+c22^2*c6+2*c22*c24*c4+c23^2*c6+2*c23*c24*c5;
t175 = c24*c9^2+2*c27*c6*c9;
t176 = 2*c21*c3*c6+2*c22*c7*c9+2*c23*c8*c9+c24*c3^2+3*c24*c6^2-c24*c7^2-c24*c8^2+2*c25*c4*c9-2*c25*c6*c7+2*c26*c5*c9-2*c26*c6*c8+2*c27*c4*c7+2*c27*c5*c8;
t177 = -c1^2*c24-2*c1*c19*c6+2*c1*c21*c4+2*c1*c22*c3+2*c19*c3*c4-c2^2*c24-2*c2*c20*c6+2*c2*c21*c5+2*c2*c23*c3+2*c20*c3*c5+2*c22*c4*c6+2*c23*c5*c6+c24*c4^2+c24*c5^2;
t178 = c6*c9^2;
t179 = c3^2*c6+2*c4*c7*c9+2*c5*c8*c9+c6^3-c6*c7^2-c6*c8^2;
t180 = -c1^2*c6+2*c1*c3*c4-c2^2*c6+2*c2*c3*c5+c4^2*c6+c5^2*c6;
t181 = c16*c18^2;
t182 = 2*c10*c12*c18-c12^2*c16+2*c13*c15*c18-c15^2*c16+c16^3+c16*c17^2;
t183 = c10^2*c16+2*c10*c11*c17-c11^2*c16+c13^2*c16+2*c13*c14*c17-c14^2*c16;
t184 = 2*c16*c18*c27+c18^2*c25;
t185 = 2*c10*c12*c27+2*c10*c18*c21-c12^2*c25-2*c12*c16*c21+2*c12*c18*c19+2*c13*c15*c27+2*c13*c18*c24-c15^2*c25-2*c15*c16*c24+2*c15*c18*c22+3*c16^2*c25+2*c16*c17*c26+c17^2*c25;
t186 = c10^2*c25+2*c10*c11*c26+2*c10*c16*c19+2*c10*c17*c20-c11^2*c25-2*c11*c16*c20+2*c11*c17*c19+c13^2*c25+2*c13*c14*c26+2*c13*c16*c22+2*c13*c17*c23-c14^2*c25-2*c14*c16*c23+2*c14*c17*c22;
t187 = 2*c16*c18*c9+c18^2*c7;
t188 = 2*c1*c12*c18+2*c10*c12*c9+2*c10*c18*c3-c12^2*c7-2*c12*c16*c3+2*c13*c15*c9+2*c13*c18*c6-c15^2*c7-2*c15*c16*c6+2*c15*c18*c4+3*c16^2*c7+2*c16*c17*c8+c17^2*c7;
t189 = 2*c1*c10*c16+2*c1*c11*c17+c10^2*c7+2*c10*c11*c8+2*c10*c17*c2-c11^2*c7-2*c11*c16*c2+c13^2*c7+2*c13*c14*c8+2*c13*c16*c4+2*c13*c17*c5-c14^2*c7-2*c14*c16*c5+2*c14*c17*c4;
t190 = c16*c27^2+2*c18*c25*c27;
t191 = 2*c10*c21*c27+2*c12*c19*c27-2*c12*c21*c25+2*c13*c24*c27+2*c15*c22*c27-2*c15*c24*c25-c16*c21^2-c16*c24^2+3*c16*c25^2+c16*c26^2+2*c17*c25*c26+2*c18*c19*c21+2*c18*c22*c24;
t192 = 2*c10*c19*c25+2*c10*c20*c26+2*c11*c19*c26-2*c11*c20*c25+2*c13*c22*c25+2*c13*c23*c26+2*c14*c22*c26-2*c14*c23*c25+c16*c19^2-c16*c20^2+c16*c22^2-c16*c23^2+2*c17*c19*c20+2*c17*c22*c23;
t193 = 2*c16*c27*c9+2*c18*c25*c9+2*c18*c27*c7;
t194 = 2*c1*c12*c27+2*c1*c18*c21+2*c10*c21*c9+2*c10*c27*c3+2*c12*c19*c9-2*c12*c21*c7-2*c12*c25*c3+2*c13*c24*c9+2*c13*c27*c6+2*c15*c22*c9-2*c15*c24*c7-2*c15*c25*c6+2*c15*c27*c4-2*c16*c21*c3-2*c16*c24*c6+6*c16*c25*c7+2*c16*c26*c8+2*c17*c25*c8+2*c17*c26*c7+2*c18*c19*c3+2*c18*c22*c6+2*c18*c24*c4;
t195 = 2*c1*c10*c25+2*c1*c11*c26+2*c1*c16*c19+2*c1*c17*c20+2*c10*c19*c7+2*c10*c2*c26+2*c10*c20*c8+2*c11*c19*c8-2*c11*c2*c25-2*c11*c20*c7+2*c13*c22*c7+2*c13*c23*c8+2*c13*c25*c4+2*c13*c26*c5+2*c14*c22*c8-2*c14*c23*c7-2*c14*c25*c5+2*c14*c26*c4-2*c16*c2*c20+2*c16*c22*c4-2*c16*c23*c5+2*c17*c19*c2+2*c17*c22*c5+2*c17*c23*c4;
t196 = c16*c9^2+2*c18*c7*c9;
t197 = 2*c1*c12*c9+2*c1*c18*c3+2*c10*c3*c9-2*c12*c3*c7+2*c13*c6*c9+2*c15*c4*c9-2*c15*c6*c7-c16*c3^2-c16*c6^2+3*c16*c7^2+c16*c8^2+2*c17*c7*c8+2*c18*c4*c6;
t198 = c1^2*c16+2*c1*c10*c7+2*c1*c11*c8+2*c1*c17*c2+2*c10*c2*c8-2*c11*c2*c7+2*c13*c4*c7+2*c13*c5*c8+2*c14*c4*c8-2*c14*c5*c7-c16*c2^2+c16*c4^2-c16*c5^2+2*c17*c4*c5;
t199 = c25*c27^2;
t200 = 2*c19*c21*c27-c21^2*c25+2*c22*c24*c27-c24^2*c25+c25^3+c25*c26^2;
t201 = c19^2*c25+2*c19*c20*c26-c20^2*c25+c22^2*c25+2*c22*c23*c26-c23^2*c25;
t202 = 2*c25*c27*c9+c27^2*c7;
t203 = 2*c1*c21*c27+2*c19*c21*c9+2*c19*c27*c3-c21^2*c7-2*c21*c25*c3+2*c22*c24*c9+2*c22*c27*c6-c24^2*c7-2*c24*c25*c6+2*c24*c27*c4+3*c25^2*c7+2*c25*c26*c8+c26^2*c7;
t204 = 2*c1*c19*c25+2*c1*c20*c26+c19^2*c7+2*c19*c2*c26+2*c19*c20*c8-2*c2*c20*c25-c20^2*c7+c22^2*c7+2*c22*c23*c8+2*c22*c25*c4+2*c22*c26*c5-c23^2*c7-2*c23*c25*c5+2*c23*c26*c4;
t205 = c25*c9^2+2*c27*c7*c9;
t206 = 2*c1*c21*c9+2*c1*c27*c3+2*c19*c3*c9-2*c21*c3*c7+2*c22*c6*c9+2*c24*c4*c9-2*c24*c6*c7-c25*c3^2-c25*c6^2+3*c25*c7^2+c25*c8^2+2*c26*c7*c8+2*c27*c4*c6;
t207 = c1^2*c25+2*c1*c19*c7+2*c1*c2*c26+2*c1*c20*c8+2*c19*c2*c8-c2^2*c25-2*c2*c20*c7+2*c22*c4*c7+2*c22*c5*c8+2*c23*c4*c8-2*c23*c5*c7+c25*c4^2-c25*c5^2+2*c26*c4*c5;
t208 = c7*c9^2;
t209 = 2*c1*c3*c9-c3^2*c7+2*c4*c6*c9-c6^2*c7+c7^3+c7*c8^2;
t210 = c1^2*c7+2*c1*c2*c8-c2^2*c7+c4^2*c7+2*c4*c5*c8-c5^2*c7;
t211 = c17*c18^2;
t212 = 2*c11*c12*c18-c12^2*c17+2*c14*c15*c18-c15^2*c17+c16^2*c17+c17^3;
t213 = -c10^2*c17+2*c10*c11*c16+c11^2*c17-c13^2*c17+2*c13*c14*c16+c14^2*c17;
t214 = 2*c17*c18*c27+c18^2*c26;
t215 = 2*c11*c12*c27+2*c11*c18*c21-c12^2*c26-2*c12*c17*c21+2*c12*c18*c20+2*c14*c15*c27+2*c14*c18*c24-c15^2*c26-2*c15*c17*c24+2*c15*c18*c23+c16^2*c26+2*c16*c17*c25+3*c17^2*c26;
t216 = -c10^2*c26+2*c10*c11*c25+2*c10*c16*c20-2*c10*c17*c19+c11^2*c26+2*c11*c16*c19+2*c11*c17*c20-c13^2*c26+2*c13*c14*c25+2*c13*c16*c23-2*c13*c17*c22+c14^2*c26+2*c14*c16*c22+2*c14*c17*c23;
t217 = 2*c17*c18*c9+c18^2*c8;
t218 = 2*c11*c12*c9+2*c11*c18*c3-c12^2*c8-2*c12*c17*c3+2*c12*c18*c2+2*c14*c15*c9+2*c14*c18*c6-c15^2*c8-2*c15*c17*c6+2*c15*c18*c5+c16^2*c8+2*c16*c17*c7+3*c17^2*c8;
t219 = -2*c1*c10*c17+2*c1*c11*c16-c10^2*c8+2*c10*c11*c7+2*c10*c16*c2+c11^2*c8+2*c11*c17*c2-c13^2*c8+2*c13*c14*c7+2*c13*c16*c5-2*c13*c17*c4+c14^2*c8+2*c14*c16*c4+2*c14*c17*c5;
t220 = c17*c27^2+2*c18*c26*c27;
t221 = 2*c11*c21*c27+2*c12*c20*c27-2*c12*c21*c26+2*c14*c24*c27+2*c15*c23*c27-2*c15*c24*c26+2*c16*c25*c26-c17*c21^2-c17*c24^2+c17*c25^2+3*c17*c26^2+2*c18*c20*c21+2*c18*c23*c24;
t222 = -2*c10*c19*c26+2*c10*c20*c25+2*c11*c19*c25+2*c11*c20*c26-2*c13*c22*c26+2*c13*c23*c25+2*c14*c22*c25+2*c14*c23*c26+2*c16*c19*c20+2*c16*c22*c23-c17*c19^2+c17*c20^2-c17*c22^2+c17*c23^2;
t223 = 2*c17*c27*c9+2*c18*c26*c9+2*c18*c27*c8;
t224 = 2*c11*c21*c9+2*c11*c27*c3+2*c12*c2*c27+2*c12*c20*c9-2*c12*c21*c8-2*c12*c26*c3+2*c14*c24*c9+2*c14*c27*c6+2*c15*c23*c9-2*c15*c24*c8-2*c15*c26*c6+2*c15*c27*c5+2*c16*c25*c8+2*c16*c26*c7-2*c17*c21*c3-2*c17*c24*c6+2*c17*c25*c7+6*c17*c26*c8+2*c18*c2*c21+2*c18*c20*c3+2*c18*c23*c6+2*c18*c24*c5;
t225 = -2*c1*c10*c26+2*c1*c11*c25+2*c1*c16*c20-2*c1*c17*c19-2*c10*c19*c8+2*c10*c2*c25+2*c10*c20*c7+2*c11*c19*c7+2*c11*c2*c26+2*c11*c20*c8-2*c13*c22*c8+2*c13*c23*c7+2*c13*c25*c5-2*c13*c26*c4+2*c14*c22*c7+2*c14*c23*c8+2*c14*c25*c4+2*c14*c26*c5+2*c16*c19*c2+2*c16*c22*c5+2*c16*c23*c4+2*c17*c2*c20-2*c17*c22*c4+2*c17*c23*c5;
t226 = c17*c9^2+2*c18*c8*c9;
t227 = 2*c11*c3*c9+2*c12*c2*c9-2*c12*c3*c8+2*c14*c6*c9+2*c15*c5*c9-2*c15*c6*c8+2*c16*c7*c8-c17*c3^2-c17*c6^2+c17*c7^2+3*c17*c8^2+2*c18*c2*c3+2*c18*c5*c6;
t228 = -c1^2*c17-2*c1*c10*c8+2*c1*c11*c7+2*c1*c16*c2+2*c10*c2*c7+2*c11*c2*c8-2*c13*c4*c8+2*c13*c5*c7+2*c14*c4*c7+2*c14*c5*c8+2*c16*c4*c5+c17*c2^2-c17*c4^2+c17*c5^2;
t229 = c26*c27^2;
t230 = 2*c20*c21*c27-c21^2*c26+2*c23*c24*c27-c24^2*c26+c25^2*c26+c26^3;
t231 = -c19^2*c26+2*c19*c20*c25+c20^2*c26-c22^2*c26+2*c22*c23*c25+c23^2*c26;
t232 = 2*c26*c27*c9+c27^2*c8;
t233 = 2*c2*c21*c27+2*c20*c21*c9+2*c20*c27*c3-c21^2*c8-2*c21*c26*c3+2*c23*c24*c9+2*c23*c27*c6-c24^2*c8-2*c24*c26*c6+2*c24*c27*c5+c25^2*c8+2*c25*c26*c7+3*c26^2*c8;
t234 = -2*c1*c19*c26+2*c1*c20*c25-c19^2*c8+2*c19*c2*c25+2*c19*c20*c7+2*c2*c20*c26+c20^2*c8-c22^2*c8+2*c22*c23*c7+2*c22*c25*c5-2*c22*c26*c4+c23^2*c8+2*c23*c25*c4+2*c23*c26*c5;
t235 = c26*c9^2+2*c27*c8*c9;
t236 = 2*c2*c21*c9+2*c2*c27*c3+2*c20*c3*c9-2*c21*c3*c8+2*c23*c6*c9+2*c24*c5*c9-2*c24*c6*c8+2*c25*c7*c8-c26*c3^2-c26*c6^2+c26*c7^2+3*c26*c8^2+2*c27*c5*c6;
t237 = -c1^2*c26-2*c1*c19*c8+2*c1*c2*c25+2*c1*c20*c7+2*c19*c2*c7+c2^2*c26+2*c2*c20*c8-2*c22*c4*c8+2*c22*c5*c7+2*c23*c4*c7+2*c23*c5*c8+2*c25*c4*c5-c26*c4^2+c26*c5^2;
t238 = c8*c9^2;
t239 = 2*c2*c3*c9-c3^2*c8+2*c5*c6*c9-c6^2*c8+c7^2*c8+c8^3;
t240 = -c1^2*c8+2*c1*c2*c7+c2^2*c8-c4^2*c8+2*c4*c5*c7+c5^2*c8;
t241 = c18^3;
t242 = c12^2*c18+c15^2*c18+c16^2*c18+c17^2*c18;
t243 = -c10^2*c18+2*c10*c12*c16-c11^2*c18+2*c11*c12*c17-c13^2*c18+2*c13*c15*c16-c14^2*c18+2*c14*c15*c17;
t244 = 3*c18^2*c27;
t245 = c12^2*c27+2*c12*c18*c21+c15^2*c27+2*c15*c18*c24+c16^2*c27+2*c16*c18*c25+c17^2*c27+2*c17*c18*c26;
t246 = -c10^2*c27+2*c10*c12*c25+2*c10*c16*c21-2*c10*c18*c19-c11^2*c27+2*c11*c12*c26+2*c11*c17*c21-2*c11*c18*c20+2*c12*c16*c19+2*c12*c17*c20-c13^2*c27+2*c13*c15*c25+2*c13*c16*c24-2*c13*c18*c22-c14^2*c27+2*c14*c15*c26+2*c14*c17*c24-2*c14*c18*c23+2*c15*c16*c22+2*c15*c17*c23;
t247 = 3*c18^2*c9;
t248 = c12^2*c9+2*c12*c18*c3+c15^2*c9+2*c15*c18*c6+c16^2*c9+2*c16*c18*c7+c17^2*c9+2*c17*c18*c8;
t249 = -2*c1*c10*c18+2*c1*c12*c16-c10^2*c9+2*c10*c12*c7+2*c10*c16*c3-c11^2*c9+2*c11*c12*c8+2*c11*c17*c3-2*c11*c18*c2+2*c12*c17*c2-c13^2*c9+2*c13*c15*c7+2*c13*c16*c6-2*c13*c18*c4-c14^2*c9+2*c14*c15*c8+2*c14*c17*c6-2*c14*c18*c5+2*c15*c16*c4+2*c15*c17*c5;
t250 = 3*c18*c27^2;
t251 = 2*c12*c21*c27+2*c15*c24*c27+2*c16*c25*c27+2*c17*c26*c27+c18*c21^2+c18*c24^2+c18*c25^2+c18*c26^2;
t252 = -2*c10*c19*c27+2*c10*c21*c25-2*c11*c20*c27+2*c11*c21*c26+2*c12*c19*c25+2*c12*c20*c26-2*c13*c22*c27+2*c13*c24*c25-2*c14*c23*c27+2*c14*c24*c26+2*c15*c22*c25+2*c15*c23*c26+2*c16*c19*c21+2*c16*c22*c24+2*c17*c20*c21+2*c17*c23*c24-c18*c19^2-c18*c20^2-c18*c22^2-c18*c23^2;
t253 = 6*c18*c27*c9;
t254 = 2*c12*c21*c9+2*c12*c27*c3+2*c15*c24*c9+2*c15*c27*c6+2*c16*c25*c9+2*c16*c27*c7+2*c17*c26*c9+2*c17*c27*c8+2*c18*c21*c3+2*c18*c24*c6+2*c18*c25*c7+2*c18*c26*c8;
t255 = -2*c1*c10*c27+2*c1*c12*c25+2*c1*c16*c21-2*c1*c18*c19-2*c10*c19*c9+2*c10*c21*c7+2*c10*c25*c3-2*c11*c2*c27-2*c11*c20*c9+2*c11*c21*c8+2*c11*c26*c3+2*c12*c19*c7+2*c12*c2*c26+2*c12*c20*c8-2*c13*c22*c9+2*c13*c24*c7+2*c13*c25*c6-2*c13*c27*c4-2*c14*c23*c9+2*c14*c24*c8+2*c14*c26*c6-2*c14*c27*c5+2*c15*c22*c7+2*c15*c23*c8+2*c15*c25*c4+2*c15*c26*c5+2*c16*c19*c3+2*c16*c22*c6+2*c16*c24*c4+2*c17*c2*c21+2*c17*c20*c3+2*c17*c23*c6+2*c17*c24*c5-2*c18*c2*c20-2*c18*c22*c4-2*c18*c23*c5;
t256 = 3*c18*c9^2;
t257 = 2*c12*c3*c9+2*c15*c6*c9+2*c16*c7*c9+2*c17*c8*c9+c18*c3^2+c18*c6^2+c18*c7^2+c18*c8^2;
t258 = -c1^2*c18-2*c1*c10*c9+2*c1*c12*c7+2*c1*c16*c3+2*c10*c3*c7-2*c11*c2*c9+2*c11*c3*c8+2*c12*c2*c8-2*c13*c4*c9+2*c13*c6*c7-2*c14*c5*c9+2*c14*c6*c8+2*c15*c4*c7+2*c15*c5*c8+2*c16*c4*c6+2*c17*c2*c3+2*c17*c5*c6-c18*c2^2-c18*c4^2-c18*c5^2;
t259 = c27^3;
t260 = c21^2*c27+c24^2*c27+c25^2*c27+c26^2*c27;
t261 = -c19^2*c27+2*c19*c21*c25-c20^2*c27+2*c20*c21*c26-c22^2*c27+2*c22*c24*c25-c23^2*c27+2*c23*c24*c26;
t262 = 3*c27^2*c9;
t263 = c21^2*c9+2*c21*c27*c3+c24^2*c9+2*c24*c27*c6+c25^2*c9+2*c25*c27*c7+c26^2*c9+2*c26*c27*c8;
t264 = -2*c1*c19*c27+2*c1*c21*c25-c19^2*c9+2*c19*c21*c7+2*c19*c25*c3-2*c2*c20*c27+2*c2*c21*c26-c20^2*c9+2*c20*c21*c8+2*c20*c26*c3-c22^2*c9+2*c22*c24*c7+2*c22*c25*c6-2*c22*c27*c4-c23^2*c9+2*c23*c24*c8+2*c23*c26*c6-2*c23*c27*c5+2*c24*c25*c4+2*c24*c26*c5;
t265 = 3*c27*c9^2;
t266 = 2*c21*c3*c9+2*c24*c6*c9+2*c25*c7*c9+2*c26*c8*c9+c27*c3^2+c27*c6^2+c27*c7^2+c27*c8^2;
t267 = -c1^2*c27-2*c1*c19*c9+2*c1*c21*c7+2*c1*c25*c3+2*c19*c3*c7-c2^2*c27-2*c2*c20*c9+2*c2*c21*c8+2*c2*c26*c3+2*c20*c3*c8-2*c22*c4*c9+2*c22*c6*c7-2*c23*c5*c9+2*c23*c6*c8+2*c24*c4*c7+2*c24*c5*c8+2*c25*c4*c6+2*c26*c5*c6-c27*c4^2-c27*c5^2;
t268 = c9^3;
t269 = c3^2*c9+c6^2*c9+c7^2*c9+c8^2*c9;
t270 = -c1^2*c9+2*c1*c3*c7-c2^2*c9+2*c2*c3*c8-c4^2*c9+2*c4*c6*c7-c5^2*c9+2*c5*c6*c8;
t271 = c10*c14*c18-c10*c15*c17-c11*c13*c18+c11*c15*c16+c12*c13*c17-c12*c14*c16;
t272 = c10*c14*c27-c10*c15*c26-c10*c17*c24+c10*c18*c23-c11*c13*c27+c11*c15*c25+c11*c16*c24-c11*c18*c22+c12*c13*c26-c12*c14*c25-c12*c16*c23+c12*c17*c22+c13*c17*c21-c13*c18*c20-c14*c16*c21+c14*c18*c19+c15*c16*c20-c15*c17*c19;
t273 = c1*c14*c18-c1*c15*c17+c10*c14*c9-c10*c15*c8-c10*c17*c6+c10*c18*c5-c11*c13*c9+c11*c15*c7+c11*c16*c6-c11*c18*c4+c12*c13*c8-c12*c14*c7-c12*c16*c5+c12*c17*c4+c13*c17*c3-c13*c18*c2-c14*c16*c3+c15*c16*c2;
t274 = c10*c23*c27-c10*c24*c26-c11*c22*c27+c11*c24*c25+c12*c22*c26-c12*c23*c25-c13*c20*c27+c13*c21*c26+c14*c19*c27-c14*c21*c25-c15*c19*c26+c15*c20*c25+c16*c20*c24-c16*c21*c23-c17*c19*c24+c17*c21*c22+c18*c19*c23-c18*c20*c22;
t275 = c1*c14*c27-c1*c15*c26-c1*c17*c24+c1*c18*c23+c10*c23*c9-c10*c24*c8-c10*c26*c6+c10*c27*c5-c11*c22*c9+c11*c24*c7+c11*c25*c6-c11*c27*c4+c12*c22*c8-c12*c23*c7-c12*c25*c5+c12*c26*c4-c13*c2*c27-c13*c20*c9+c13*c21*c8+c13*c26*c3+c14*c19*c9-c14*c21*c7-c14*c25*c3-c15*c19*c8+c15*c2*c25+c15*c20*c7+c16*c2*c24+c16*c20*c6-c16*c21*c5-c16*c23*c3-c17*c19*c6+c17*c21*c4+c17*c22*c3+c18*c19*c5-c18*c2*c22-c18*c20*c4;
t276 = c1*c14*c9-c1*c15*c8-c1*c17*c6+c1*c18*c5+c10*c5*c9-c10*c6*c8-c11*c4*c9+c11*c6*c7+c12*c4*c8-c12*c5*c7-c13*c2*c9+c13*c3*c8-c14*c3*c7+c15*c2*c7+c16*c2*c6-c16*c3*c5+c17*c3*c4-c18*c2*c4;
t277 = c19*c23*c27-c19*c24*c26-c20*c22*c27+c20*c24*c25+c21*c22*c26-c21*c23*c25;
t278 = c1*c23*c27-c1*c24*c26+c19*c23*c9-c19*c24*c8-c19*c26*c6+c19*c27*c5-c2*c22*c27+c2*c24*c25-c20*c22*c9+c20*c24*c7+c20*c25*c6-c20*c27*c4+c21*c22*c8-c21*c23*c7-c21*c25*c5+c21*c26*c4+c22*c26*c3-c23*c25*c3;
t279 = c1*c23*c9-c1*c24*c8-c1*c26*c6+c1*c27*c5+c19*c5*c9-c19*c6*c8-c2*c22*c9+c2*c24*c7+c2*c25*c6-c2*c27*c4-c20*c4*c9+c20*c6*c7+c21*c4*c8-c21*c5*c7+c22*c3*c8-c23*c3*c7-c25*c3*c5+c26*c3*c4;
t280 = c1*c5*c9-c1*c6*c8-c2*c4*c9+c2*c6*c7+c3*c4*c8-c3*c5*c7;
M = zeros(11,31);
M(1,1) = t1;
M(1,2) = t4;
M(1,3) = t10;
M(1,4) = t19;
M(1,5) = t2;
M(1,6) = t5;
M(1,7) = t11;
M(1,8) = t20;
M(1,9) = t7;
M(1,10) = t13;
M(1,11) = t22;
M(1,12) = t3;
M(1,13) = t6;
M(1,14) = t12;
M(1,15) = t21;
M(1,16) = t8;
M(1,17) = t14;
M(1,18) = t23;
M(1,19) = t16;
M(1,20) = t25;
M(1,21) = t9;
M(1,22) = t15;
M(1,23) = t24;
M(1,24) = t17;
M(1,25) = t26;
M(1,26) = t28;
M(1,27) = t18;
M(1,28) = t27;
M(1,29) = t29;
M(1,31) = t30;
M(2,1) = t31;
M(2,2) = t34;
M(2,3) = t40;
M(2,4) = t49;
M(2,5) = t32;
M(2,6) = t35;
M(2,7) = t41;
M(2,8) = t50;
M(2,9) = t37;
M(2,10) = t43;
M(2,11) = t52;
M(2,12) = t33;
M(2,13) = t36;
M(2,14) = t42;
M(2,15) = t51;
M(2,16) = t38;
M(2,17) = t44;
M(2,18) = t53;
M(2,19) = t46;
M(2,20) = t55;
M(2,21) = t39;
M(2,22) = t45;
M(2,23) = t54;
M(2,24) = t47;
M(2,25) = t56;
M(2,26) = t58;
M(2,27) = t48;
M(2,28) = t57;
M(2,29) = t59;
M(2,31) = t60;
M(3,1) = t61;
M(3,2) = t64;
M(3,3) = t70;
M(3,4) = t79;
M(3,5) = t62;
M(3,6) = t65;
M(3,7) = t71;
M(3,8) = t80;
M(3,9) = t67;
M(3,10) = t73;
M(3,11) = t82;
M(3,12) = t63;
M(3,13) = t66;
M(3,14) = t72;
M(3,15) = t81;
M(3,16) = t68;
M(3,17) = t74;
M(3,18) = t83;
M(3,19) = t76;
M(3,20) = t85;
M(3,21) = t69;
M(3,22) = t75;
M(3,23) = t84;
M(3,24) = t77;
M(3,25) = t86;
M(3,26) = t88;
M(3,27) = t78;
M(3,28) = t87;
M(3,29) = t89;
M(3,31) = t90;
M(4,1) = t91;
M(4,2) = t94;
M(4,3) = t100;
M(4,4) = t109;
M(4,5) = t92;
M(4,6) = t95;
M(4,7) = t101;
M(4,8) = t110;
M(4,9) = t97;
M(4,10) = t103;
M(4,11) = t112;
M(4,12) = t93;
M(4,13) = t96;
M(4,14) = t102;
M(4,15) = t111;
M(4,16) = t98;
M(4,17) = t104;
M(4,18) = t113;
M(4,19) = t106;
M(4,20) = t115;
M(4,21) = t99;
M(4,22) = t105;
M(4,23) = t114;
M(4,24) = t107;
M(4,25) = t116;
M(4,26) = t118;
M(4,27) = t108;
M(4,28) = t117;
M(4,29) = t119;
M(4,31) = t120;
M(5,1) = t121;
M(5,2) = t124;
M(5,3) = t130;
M(5,4) = t139;
M(5,5) = t122;
M(5,6) = t125;
M(5,7) = t131;
M(5,8) = t140;
M(5,9) = t127;
M(5,10) = t133;
M(5,11) = t142;
M(5,12) = t123;
M(5,13) = t126;
M(5,14) = t132;
M(5,15) = t141;
M(5,16) = t128;
M(5,17) = t134;
M(5,18) = t143;
M(5,19) = t136;
M(5,20) = t145;
M(5,21) = t129;
M(5,22) = t135;
M(5,23) = t144;
M(5,24) = t137;
M(5,25) = t146;
M(5,26) = t148;
M(5,27) = t138;
M(5,28) = t147;
M(5,29) = t149;
M(5,31) = t150;
M(6,1) = t151;
M(6,2) = t154;
M(6,3) = t160;
M(6,4) = t169;
M(6,5) = t152;
M(6,6) = t155;
M(6,7) = t161;
M(6,8) = t170;
M(6,9) = t157;
M(6,10) = t163;
M(6,11) = t172;
M(6,12) = t153;
M(6,13) = t156;
M(6,14) = t162;
M(6,15) = t171;
M(6,16) = t158;
M(6,17) = t164;
M(6,18) = t173;
M(6,19) = t166;
M(6,20) = t175;
M(6,21) = t159;
M(6,22) = t165;
M(6,23) = t174;
M(6,24) = t167;
M(6,25) = t176;
M(6,26) = t178;
M(6,27) = t168;
M(6,28) = t177;
M(6,29) = t179;
M(6,31) = t180;
M(7,1) = t181;
M(7,2) = t184;
M(7,3) = t190;
M(7,4) = t199;
M(7,5) = t182;
M(7,6) = t185;
M(7,7) = t191;
M(7,8) = t200;
M(7,9) = t187;
M(7,10) = t193;
M(7,11) = t202;
M(7,12) = t183;
M(7,13) = t186;
M(7,14) = t192;
M(7,15) = t201;
M(7,16) = t188;
M(7,17) = t194;
M(7,18) = t203;
M(7,19) = t196;
M(7,20) = t205;
M(7,21) = t189;
M(7,22) = t195;
M(7,23) = t204;
M(7,24) = t197;
M(7,25) = t206;
M(7,26) = t208;
M(7,27) = t198;
M(7,28) = t207;
M(7,29) = t209;
M(7,31) = t210;
M(8,1) = t211;
M(8,2) = t214;
M(8,3) = t220;
M(8,4) = t229;
M(8,5) = t212;
M(8,6) = t215;
M(8,7) = t221;
M(8,8) = t230;
M(8,9) = t217;
M(8,10) = t223;
M(8,11) = t232;
M(8,12) = t213;
M(8,13) = t216;
M(8,14) = t222;
M(8,15) = t231;
M(8,16) = t218;
M(8,17) = t224;
M(8,18) = t233;
M(8,19) = t226;
M(8,20) = t235;
M(8,21) = t219;
M(8,22) = t225;
M(8,23) = t234;
M(8,24) = t227;
M(8,25) = t236;
M(8,26) = t238;
M(8,27) = t228;
M(8,28) = t237;
M(8,29) = t239;
M(8,31) = t240;
M(9,1) = t241;
M(9,2) = t244;
M(9,3) = t250;
M(9,4) = t259;
M(9,5) = t242;
M(9,6) = t245;
M(9,7) = t251;
M(9,8) = t260;
M(9,9) = t247;
M(9,10) = t253;
M(9,11) = t262;
M(9,12) = t243;
M(9,13) = t246;
M(9,14) = t252;
M(9,15) = t261;
M(9,16) = t248;
M(9,17) = t254;
M(9,18) = t263;
M(9,19) = t256;
M(9,20) = t265;
M(9,21) = t249;
M(9,22) = t255;
M(9,23) = t264;
M(9,24) = t257;
M(9,25) = t266;
M(9,26) = t268;
M(9,27) = t258;
M(9,28) = t267;
M(9,29) = t269;
M(9,31) = t270;
M(10,12) = t271;
M(10,13) = t272;
M(10,14) = t274;
M(10,15) = t277;
M(10,21) = t273;
M(10,22) = t275;
M(10,23) = t278;
M(10,27) = t276;
M(10,28) = t279;
M(10,31) = t280;
M(11,28) = 1;
M(11,30) = -1;
M = [rref(M(1:0,:)); M(1:end,:)];
nc1 = M(1);nc2 = M(2);nc3 = M(3);nc4 = M(4);nc5 = M(5);nc6 = M(6);nc7 = M(7);nc8 = M(8);nc9 = M(9);nc10 = M(12);nc11 = M(13);nc12 = M(14);nc13 = M(15);nc14 = M(16);nc15 = M(17);nc16 = M(18);nc17 = M(19);nc18 = M(20);nc19 = M(23);nc20 = M(24);nc21 = M(25);nc22 = M(26);nc23 = M(27);nc24 = M(28);nc25 = M(29);nc26 = M(30);nc27 = M(31);nc28 = M(34);nc29 = M(35);nc30 = M(36);nc31 = M(37);nc32 = M(38);nc33 = M(39);nc34 = M(40);nc35 = M(41);nc36 = M(42);nc37 = M(45);nc38 = M(46);nc39 = M(47);nc40 = M(48);nc41 = M(49);nc42 = M(50);nc43 = M(51);nc44 = M(52);nc45 = M(53);nc46 = M(56);nc47 = M(57);nc48 = M(58);nc49 = M(59);nc50 = M(60);nc51 = M(61);nc52 = M(62);nc53 = M(63);nc54 = M(64);nc55 = M(67);nc56 = M(68);nc57 = M(69);nc58 = M(70);nc59 = M(71);nc60 = M(72);nc61 = M(73);nc62 = M(74);nc63 = M(75);nc64 = M(78);nc65 = M(79);nc66 = M(80);nc67 = M(81);nc68 = M(82);nc69 = M(83);nc70 = M(84);nc71 = M(85);nc72 = M(86);nc73 = M(89);nc74 = M(90);nc75 = M(91);nc76 = M(92);nc77 = M(93);nc78 = M(94);nc79 = M(95);nc80 = M(96);nc81 = M(97);nc82 = M(100);nc83 = M(101);nc84 = M(102);nc85 = M(103);nc86 = M(104);nc87 = M(105);nc88 = M(106);nc89 = M(107);nc90 = M(108);nc91 = M(111);nc92 = M(112);nc93 = M(113);nc94 = M(114);nc95 = M(115);nc96 = M(116);nc97 = M(117);nc98 = M(118);nc99 = M(119);nc100 = M(122);nc101 = M(123);nc102 = M(124);nc103 = M(125);nc104 = M(126);nc105 = M(127);nc106 = M(128);nc107 = M(129);nc108 = M(130);nc109 = M(131);nc110 = M(133);nc111 = M(134);nc112 = M(135);nc113 = M(136);nc114 = M(137);nc115 = M(138);nc116 = M(139);nc117 = M(140);nc118 = M(141);nc119 = M(142);nc120 = M(144);nc121 = M(145);nc122 = M(146);nc123 = M(147);nc124 = M(148);nc125 = M(149);nc126 = M(150);nc127 = M(151);nc128 = M(152);nc129 = M(153);nc130 = M(155);nc131 = M(156);nc132 = M(157);nc133 = M(158);nc134 = M(159);nc135 = M(160);nc136 = M(161);nc137 = M(162);nc138 = M(163);nc139 = M(164);nc140 = M(166);nc141 = M(167);nc142 = M(168);nc143 = M(169);nc144 = M(170);nc145 = M(171);nc146 = M(172);nc147 = M(173);nc148 = M(174);nc149 = M(177);nc150 = M(178);nc151 = M(179);nc152 = M(180);nc153 = M(181);nc154 = M(182);nc155 = M(183);nc156 = M(184);nc157 = M(185);nc158 = M(188);nc159 = M(189);nc160 = M(190);nc161 = M(191);nc162 = M(192);nc163 = M(193);nc164 = M(194);nc165 = M(195);nc166 = M(196);nc167 = M(199);nc168 = M(200);nc169 = M(201);nc170 = M(202);nc171 = M(203);nc172 = M(204);nc173 = M(205);nc174 = M(206);nc175 = M(207);nc176 = M(210);nc177 = M(211);nc178 = M(212);nc179 = M(213);nc180 = M(214);nc181 = M(215);nc182 = M(216);nc183 = M(217);nc184 = M(218);nc185 = M(221);nc186 = M(222);nc187 = M(223);nc188 = M(224);nc189 = M(225);nc190 = M(226);nc191 = M(227);nc192 = M(228);nc193 = M(229);nc194 = M(230);nc195 = M(232);nc196 = M(233);nc197 = M(234);nc198 = M(235);nc199 = M(236);nc200 = M(237);nc201 = M(238);nc202 = M(239);nc203 = M(240);nc204 = M(241);nc205 = M(243);nc206 = M(244);nc207 = M(245);nc208 = M(246);nc209 = M(247);nc210 = M(248);nc211 = M(249);nc212 = M(250);nc213 = M(251);nc214 = M(252);nc215 = M(254);nc216 = M(255);nc217 = M(256);nc218 = M(257);nc219 = M(258);nc220 = M(259);nc221 = M(260);nc222 = M(261);nc223 = M(262);nc224 = M(265);nc225 = M(266);nc226 = M(267);nc227 = M(268);nc228 = M(269);nc229 = M(270);nc230 = M(271);nc231 = M(272);nc232 = M(273);nc233 = M(276);nc234 = M(277);nc235 = M(278);nc236 = M(279);nc237 = M(280);nc238 = M(281);nc239 = M(282);nc240 = M(283);nc241 = M(284);nc242 = M(287);nc243 = M(288);nc244 = M(289);nc245 = M(290);nc246 = M(291);nc247 = M(292);nc248 = M(293);nc249 = M(294);nc250 = M(295);nc251 = M(296);nc252 = M(298);nc253 = M(299);nc254 = M(300);nc255 = M(301);nc256 = M(302);nc257 = M(303);nc258 = M(304);nc259 = M(305);nc260 = M(306);nc261 = M(307);nc262 = M(309);nc263 = M(310);nc264 = M(311);nc265 = M(312);nc266 = M(313);nc267 = M(314);nc268 = M(315);nc269 = M(316);nc270 = M(317);nc271 = M(331);nc272 = M(332);nc273 = M(333);nc274 = M(334);nc275 = M(335);nc276 = M(336);nc277 = M(337);nc278 = M(338);nc279 = M(339);nc280 = M(340);
ArrayOfCsNames = '';
sizeOfC = 30;
noOfVars = 4;
sparseBasis = [1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 4 4 4; 0 0 0 1 1 1 2 2 2 0 0 0 1 1 1 0 0 0 3 3 3 2 2 2 1 1 1 0 0 0; 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2;];
solFromEigenVectors = [-1 -1 -1; 0 0 1; 0 0 0; 0 1 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 1 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0;];
Cs = zeros(30,60);
Cs(1,1) = nc271;
Cs(1,2) = nc262;
Cs(1,3) = nc233;
Cs(1,4) = nc242;
Cs(1,5) = nc215;
Cs(1,6) = nc167;
Cs(1,7) = nc185;
Cs(1,8) = nc140;
Cs(1,9) = nc73;
Cs(1,10) = nc252;
Cs(1,11) = nc224;
Cs(1,12) = nc176;
Cs(1,13) = nc195;
Cs(1,14) = nc149;
Cs(1,15) = nc82;
Cs(1,16) = nc205;
Cs(1,17) = nc158;
Cs(1,18) = nc91;
Cs(1,19) = nc100;
Cs(1,20) = nc37;
Cs(1,21) = nc1;
Cs(1,22) = nc110;
Cs(1,23) = nc46;
Cs(1,24) = nc10;
Cs(1,25) = nc120;
Cs(1,26) = nc55;
Cs(1,27) = nc19;
Cs(1,28) = nc130;
Cs(1,29) = nc64;
Cs(1,30) = nc28;
Cs(2,1) = nc272;
Cs(2,2) = nc263;
Cs(2,3) = nc234;
Cs(2,4) = nc243;
Cs(2,5) = nc216;
Cs(2,6) = nc168;
Cs(2,7) = nc186;
Cs(2,8) = nc141;
Cs(2,9) = nc74;
Cs(2,10) = nc253;
Cs(2,11) = nc225;
Cs(2,12) = nc177;
Cs(2,13) = nc196;
Cs(2,14) = nc150;
Cs(2,15) = nc83;
Cs(2,16) = nc206;
Cs(2,17) = nc159;
Cs(2,18) = nc92;
Cs(2,19) = nc101;
Cs(2,20) = nc38;
Cs(2,21) = nc2;
Cs(2,22) = nc111;
Cs(2,23) = nc47;
Cs(2,24) = nc11;
Cs(2,25) = nc121;
Cs(2,26) = nc56;
Cs(2,27) = nc20;
Cs(2,28) = nc131;
Cs(2,29) = nc65;
Cs(2,30) = nc29;
Cs(3,1) = nc273;
Cs(3,2) = nc264;
Cs(3,3) = nc235;
Cs(3,4) = nc244;
Cs(3,5) = nc217;
Cs(3,6) = nc169;
Cs(3,7) = nc187;
Cs(3,8) = nc142;
Cs(3,9) = nc75;
Cs(3,10) = nc254;
Cs(3,11) = nc226;
Cs(3,12) = nc178;
Cs(3,13) = nc197;
Cs(3,14) = nc151;
Cs(3,15) = nc84;
Cs(3,16) = nc207;
Cs(3,17) = nc160;
Cs(3,18) = nc93;
Cs(3,19) = nc102;
Cs(3,20) = nc39;
Cs(3,21) = nc3;
Cs(3,22) = nc112;
Cs(3,23) = nc48;
Cs(3,24) = nc12;
Cs(3,25) = nc122;
Cs(3,26) = nc57;
Cs(3,27) = nc21;
Cs(3,28) = nc132;
Cs(3,29) = nc66;
Cs(3,30) = nc30;
Cs(4,1) = nc274;
Cs(4,2) = nc265;
Cs(4,3) = nc236;
Cs(4,4) = nc245;
Cs(4,5) = nc218;
Cs(4,6) = nc170;
Cs(4,7) = nc188;
Cs(4,8) = nc143;
Cs(4,9) = nc76;
Cs(4,10) = nc255;
Cs(4,11) = nc227;
Cs(4,12) = nc179;
Cs(4,13) = nc198;
Cs(4,14) = nc152;
Cs(4,15) = nc85;
Cs(4,16) = nc208;
Cs(4,17) = nc161;
Cs(4,18) = nc94;
Cs(4,19) = nc103;
Cs(4,20) = nc40;
Cs(4,21) = nc4;
Cs(4,22) = nc113;
Cs(4,23) = nc49;
Cs(4,24) = nc13;
Cs(4,25) = nc123;
Cs(4,26) = nc58;
Cs(4,27) = nc22;
Cs(4,28) = nc133;
Cs(4,29) = nc67;
Cs(4,30) = nc31;
Cs(5,1) = nc275;
Cs(5,2) = nc266;
Cs(5,3) = nc237;
Cs(5,4) = nc246;
Cs(5,5) = nc219;
Cs(5,6) = nc171;
Cs(5,7) = nc189;
Cs(5,8) = nc144;
Cs(5,9) = nc77;
Cs(5,10) = nc256;
Cs(5,11) = nc228;
Cs(5,12) = nc180;
Cs(5,13) = nc199;
Cs(5,14) = nc153;
Cs(5,15) = nc86;
Cs(5,16) = nc209;
Cs(5,17) = nc162;
Cs(5,18) = nc95;
Cs(5,19) = nc104;
Cs(5,20) = nc41;
Cs(5,21) = nc5;
Cs(5,22) = nc114;
Cs(5,23) = nc50;
Cs(5,24) = nc14;
Cs(5,25) = nc124;
Cs(5,26) = nc59;
Cs(5,27) = nc23;
Cs(5,28) = nc134;
Cs(5,29) = nc68;
Cs(5,30) = nc32;
Cs(6,1) = nc276;
Cs(6,2) = nc267;
Cs(6,3) = nc238;
Cs(6,4) = nc247;
Cs(6,5) = nc220;
Cs(6,6) = nc172;
Cs(6,7) = nc190;
Cs(6,8) = nc145;
Cs(6,9) = nc78;
Cs(6,10) = nc257;
Cs(6,11) = nc229;
Cs(6,12) = nc181;
Cs(6,13) = nc200;
Cs(6,14) = nc154;
Cs(6,15) = nc87;
Cs(6,16) = nc210;
Cs(6,17) = nc163;
Cs(6,18) = nc96;
Cs(6,19) = nc105;
Cs(6,20) = nc42;
Cs(6,21) = nc6;
Cs(6,22) = nc115;
Cs(6,23) = nc51;
Cs(6,24) = nc15;
Cs(6,25) = nc125;
Cs(6,26) = nc60;
Cs(6,27) = nc24;
Cs(6,28) = nc135;
Cs(6,29) = nc69;
Cs(6,30) = nc33;
Cs(7,1) = nc277;
Cs(7,2) = nc268;
Cs(7,3) = nc239;
Cs(7,4) = nc248;
Cs(7,5) = nc221;
Cs(7,6) = nc173;
Cs(7,7) = nc191;
Cs(7,8) = nc146;
Cs(7,9) = nc79;
Cs(7,10) = nc258;
Cs(7,11) = nc230;
Cs(7,12) = nc182;
Cs(7,13) = nc201;
Cs(7,14) = nc155;
Cs(7,15) = nc88;
Cs(7,16) = nc211;
Cs(7,17) = nc164;
Cs(7,18) = nc97;
Cs(7,19) = nc106;
Cs(7,20) = nc43;
Cs(7,21) = nc7;
Cs(7,22) = nc116;
Cs(7,23) = nc52;
Cs(7,24) = nc16;
Cs(7,25) = nc126;
Cs(7,26) = nc61;
Cs(7,27) = nc25;
Cs(7,28) = nc136;
Cs(7,29) = nc70;
Cs(7,30) = nc34;
Cs(8,1) = nc278;
Cs(8,2) = nc269;
Cs(8,3) = nc240;
Cs(8,4) = nc249;
Cs(8,5) = nc222;
Cs(8,6) = nc174;
Cs(8,7) = nc192;
Cs(8,8) = nc147;
Cs(8,9) = nc80;
Cs(8,10) = nc259;
Cs(8,11) = nc231;
Cs(8,12) = nc183;
Cs(8,13) = nc202;
Cs(8,14) = nc156;
Cs(8,15) = nc89;
Cs(8,16) = nc212;
Cs(8,17) = nc165;
Cs(8,18) = nc98;
Cs(8,19) = nc107;
Cs(8,20) = nc44;
Cs(8,21) = nc8;
Cs(8,22) = nc117;
Cs(8,23) = nc53;
Cs(8,24) = nc17;
Cs(8,25) = nc127;
Cs(8,26) = nc62;
Cs(8,27) = nc26;
Cs(8,28) = nc137;
Cs(8,29) = nc71;
Cs(8,30) = nc35;
Cs(9,1) = nc279;
Cs(9,2) = nc270;
Cs(9,3) = nc241;
Cs(9,4) = nc250;
Cs(9,5) = nc223;
Cs(9,6) = nc175;
Cs(9,7) = nc193;
Cs(9,8) = nc148;
Cs(9,9) = nc81;
Cs(9,10) = nc260;
Cs(9,11) = nc232;
Cs(9,12) = nc184;
Cs(9,13) = nc203;
Cs(9,14) = nc157;
Cs(9,15) = nc90;
Cs(9,16) = nc213;
Cs(9,17) = nc166;
Cs(9,18) = nc99;
Cs(9,19) = nc108;
Cs(9,20) = nc45;
Cs(9,21) = nc9;
Cs(9,22) = nc118;
Cs(9,23) = nc54;
Cs(9,24) = nc18;
Cs(9,25) = nc128;
Cs(9,26) = nc63;
Cs(9,27) = nc27;
Cs(9,28) = nc138;
Cs(9,29) = nc72;
Cs(9,30) = nc36;
Cs(10,1) = nc280;
Cs(10,4) = nc251;
Cs(10,7) = nc194;
Cs(10,10) = nc261;
Cs(10,13) = nc204;
Cs(10,16) = nc214;
Cs(10,19) = nc109;
Cs(10,22) = nc119;
Cs(10,25) = nc129;
Cs(10,28) = nc139;
Cs(11,2) = nc280;
Cs(11,5) = nc251;
Cs(11,8) = nc194;
Cs(11,11) = nc261;
Cs(11,14) = nc204;
Cs(11,17) = nc214;
Cs(11,20) = nc109;
Cs(11,23) = nc119;
Cs(11,26) = nc129;
Cs(11,29) = nc139;
Cs(12,3) = nc280;
Cs(12,6) = nc251;
Cs(12,9) = nc194;
Cs(12,12) = nc261;
Cs(12,15) = nc204;
Cs(12,18) = nc214;
Cs(12,21) = nc109;
Cs(12,24) = nc119;
Cs(12,27) = nc129;
Cs(12,30) = nc139;
Cs(13,10) = 1;
Cs(13,31) = -1;
Cs(14,11) = 1;
Cs(14,32) = -1;
Cs(15,12) = 1;
Cs(15,33) = -1;
Cs(16,13) = 1;
Cs(16,34) = -1;
Cs(17,14) = 1;
Cs(17,35) = -1;
Cs(18,15) = 1;
Cs(18,36) = -1;
Cs(19,22) = 1;
Cs(19,37) = -1;
Cs(20,23) = 1;
Cs(20,38) = -1;
Cs(21,24) = 1;
Cs(21,39) = -1;
Cs(22,16) = 1;
Cs(22,40) = -1;
Cs(23,17) = 1;
Cs(23,41) = -1;
Cs(24,18) = 1;
Cs(24,42) = -1;
Cs(25,25) = 1;
Cs(25,43) = -1;
Cs(26,26) = 1;
Cs(26,44) = -1;
Cs(27,27) = 1;
Cs(27,45) = -1;
Cs(28,28) = 1;
Cs(28,46) = -1;
Cs(29,29) = 1;
Cs(29,47) = -1;
Cs(30,30) = 1;
Cs(30,48) = -1;
indicesToRemove = [];
indicesToSkip = fliplr(find(sum(transpose(solFromEigenVectors))~=0));
sizeoffinalres =18
rowsToRemove = [];
colsToRemove = [];
rowsToRemove = rowsToRemove(1:max(find(rowsToRemove)), :);
colsToRemove = colsToRemove(1:max(find(colsToRemove)), :);
% if(size(rowsToRemove,1) > 0)
if 1 == 2
    indicesToRemove = [rowsToRemove,colsToRemove];
    
    noOfCoeffMatrices = size(Cs,2)/size(Cs,1);
    
    sizeOfReducedCs = sizeOfC - size(rowsToRemove,1);
    sizeOfM22 = size(rowsToRemove,1);
    numberOfCoeffMs = size(Cs,2)/size(Cs,1);
    maxReducedCoeffMs = 2 * numberOfCoeffMs - 1;
    colsToRemove = colsToRemove + ([1:numberOfCoeffMs] - 1) * sizeOfC;
    colsToRemove = colsToRemove(:);
    
    % Estimating M's
    M11 = Cs;
    M11(rowsToRemove,:) =[];
    M11(:,colsToRemove) =[];
    M22 = Cs(rowsToRemove, colsToRemove);
    M12 = Cs(:,colsToRemove);
    M12(rowsToRemove,:) = [];
    M21 = Cs(rowsToRemove,:);
    M21(:,colsToRemove) = [];
    reducedCs = [M11,zeros(sizeOfReducedCs,sizeOfReducedCs*(maxReducedCoeffMs-numberOfCoeffMs))];
    M22 = M22(1:sizeOfM22, 1:sizeOfM22);
    invM22 = inv(M22);
    indxOfZeroCoeffMat = [];
    for i=1:numberOfCoeffMs
        for j=1:numberOfCoeffMs
            coeffExp = i+j-1;
            temp = reducedCs(:,sizeOfReducedCs*(coeffExp-1) + 1:sizeOfReducedCs*coeffExp);
            tempM12 = M12(:,sizeOfM22*(i-1) + 1:sizeOfM22*i);
            tempM21 = M21(:,sizeOfReducedCs*(j-1) + 1:sizeOfReducedCs*j);
            
            buff = temp - (tempM12*invM22) * tempM21;
            reducedCs(:,sizeOfReducedCs*(coeffExp-1) + 1:sizeOfReducedCs*coeffExp) = buff;
            if( norm(buff,'fro') ~= 0)
                indxOfZeroCoeffMat(coeffExp) = 1;
            else
                indxOfZeroCoeffMat(coeffExp) = 0;
            end
        end
    end
    
    allReducedCs = [];
    for i = 1:maxReducedCoeffMs
        buff = reducedCs(:,sizeOfReducedCs*(i-1) + 1:sizeOfReducedCs*i);
        if(indxOfZeroCoeffMat(i) == 1)
            allReducedCs = [allReducedCs, buff];
            
        end
    end
    numOfRedCoeffMat = max(find(indxOfZeroCoeffMat));
    solForm = solFromEigenVectors;
    solForm(indicesToRemove(:,2),:) = [];
    sparseBasis(:,indicesToRemove(:,2)) = [];
    allCss = mat2cell(allReducedCs, sizeOfReducedCs, ones(1,numOfRedCoeffMat) * sizeOfReducedCs);
    
else
    sizeOfReducedCs = sizeOfC;
    numOfRedCoeffMat = size(Cs,2)/size(Cs,1);
    allCss = mat2cell(Cs, sizeOfReducedCs, ones(1,numOfRedCoeffMat ) * sizeOfReducedCs);
    indicesToRemove = [];
end


if rank(allCss{end}) < rank(allCss{1})
    allCss = fliplr(allCss);
end

A = []; B = [];
for i = 1:numOfRedCoeffMat -2
    tempA = []; tempB = [];
    for j = 1:numOfRedCoeffMat - 1
        if j == i + 1
            tempA = [tempA eye(sizeOfReducedCs)];
        else
            tempA = [tempA zeros(sizeOfReducedCs)];
        end
        if j == i
            tempB = [tempB eye(sizeOfReducedCs)];
        else
            tempB = [tempB zeros(sizeOfReducedCs)];
        end
    end
    A = [A;tempA];
    B = [B;tempB];
end

tempA = []; tempB = [];
for j = 1:numOfRedCoeffMat - 1
    tempA = [tempA -allCss{j}];
    if j == numOfRedCoeffMat -1
        tempB = [tempB allCss{j+1}];
    else
        tempB = [tempB zeros(sizeOfReducedCs)];
    end
end
A = [A; tempA];
B = [B; tempB];



extendedbasis = [sparseBasis; zeros(1,sizeOfReducedCs)];
for i = 1:numOfRedCoeffMat-2
    extendedbasis = [extendedbasis, [sparseBasis;ones(1,sizeOfReducedCs)*i]];
end


%% Removal of 0 eigen values via row algebra operations.

perms = [];
zeigvalindx=[];
colpermutation = [];
rowpermutation = [];

% remove_0_eigvalues;
% remove_more_0_eigvalues;


%% Generation of the template to extract solutions to individual
% unhidden variables from the eigen vector which will be a vector
% of monomials, which is an extension of the sparse bases.

% sizeoffinalres = size(extendedbasis,2);
% sizeoffinalres = min(sizeoffinalres, size(extendedbasis,2));
tempextendedbasis = extendedbasis(:,1:sizeoffinalres);
% tempextendedbasis = extendedbasis(:,end-sizeoffinalres+1:end);    
disp(tempextendedbasis);
numerr = 1e-10;

% C0 = B; C1 = A;
% 
% A1 = -C0(1:end-sizeoffinalres, 1:end-sizeoffinalres);
% A2 = -C0(1:end-sizeoffinalres, end-sizeoffinalres+1:end);
% B1 = C1(end-sizeoffinalres+1:end, 1:end-sizeoffinalres);
% B2 = C1(end-sizeoffinalres+1:end, end-sizeoffinalres+1:end);
% X = B2 - (B1/A1) * A2;
% 
% [X, nullspacesize, depdXcols, nzrows, depdCcols, indepdCcols, mdepdXcols, mindepdXcols, indepdCrows, rowstorem] = remove_more_0_eigvalues_by_deflation(X);
% nullspacesize1=nullspacesize;
% depdXcols1=depdXcols;
% nzrows1=nzrows;
% depdCcols1=depdCcols;
% indepdCcols1=indepdCcols;
% mdepdXcols1=mdepdXcols;
% mindepdXcols1=mindepdXcols;
% indepdCrows1=indepdCrows;
% rowstorem1=rowstorem;
% 
% [X, nullspacesize, depdXcols, nzrows, depdCcols, indepdCcols, mdepdXcols, mindepdXcols, indepdCrows, rowstorem] = remove_more_0_eigvalues_by_deflation(X);
% nullspacesize2=nullspacesize;
% depdXcols2=depdXcols;
% nzrows2=nzrows;
% depdCcols2=depdCcols;
% indepdCcols2=indepdCcols;
% mdepdXcols2=mdepdXcols;
% mindepdXcols2=mindepdXcols;
% indepdCrows2=indepdCrows;
% rowstorem2=rowstorem;
% 
% [X, nullspacesize, depdXcols, nzrows, depdCcols, indepdCcols, mdepdXcols, mindepdXcols, indepdCrows, rowstorem] = remove_more_0_eigvalues_by_deflation(X);
% nullspacesize3=nullspacesize;
% depdXcols3=depdXcols;
% nzrows3=nzrows;
% depdCcols3=depdCcols;
% indepdCcols3=indepdCcols;
% mdepdXcols3=mdepdXcols;
% mindepdXcols3=mindepdXcols;
% indepdCrows3=indepdCrows;
% rowstorem3=rowstorem;
    

pairs = transpose(combnk(1:size(tempextendedbasis,2),2));

ops = eye(size(tempextendedbasis,1));
solverTemplate = zeros(size(tempextendedbasis));
for i = 1:size(tempextendedbasis,1) -1
    op = ops(:,i);
    for pair = pairs
        tmp = tempextendedbasis(:,pair)* [1;-1];
        if norm(abs(tmp) - op) == 0
            solverTemplate(:,pair(1)) = solverTemplate(:,pair(1)) + sum(tmp) * op;
            solverTemplate(:,pair(2)) = solverTemplate(:,pair(2)) -sum(tmp) * op;
            break;
        end
    end
end
%     Removoing the extended part of the sparseBasis
extendedbasis = tempextendedbasis;
%%


solverTemplate(size(extendedbasis,1),:) = [];

disp(" Parasitic eigenvalues have been removed. And size of final solver is ");
disp(size(extendedbasis));
end
